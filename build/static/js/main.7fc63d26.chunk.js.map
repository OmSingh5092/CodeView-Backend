{"version":3,"sources":["app/res/icons/google.png","app/res/icons/user.png","app/res/icons/coding.png","logo.svg","app/res/themes.js","app/config.js","app/components/molecules/InterViewerLogin.js","app/utils/api/endpoints.js","app/utils/localStorage.js","app/utils/api/controllers/roomCtrl.js","app/components/molecules/JoinRoomForm.js","app/components/atoms/GoogleLoginButton.js","app/components/atoms/RedirectRoute.js","app/utils/api/controllers/interviewerCtrl.js","app/components/screens/LoginScreen.js","app/utils/api/controllers/signInCtrl.js","app/utils/firebase/storage.js","app/components/molecules/RegistrationForm.js","app/components/screens/RegisterScreen.js","app/components/molecules/CreateRoomForm.js","app/components/atoms/FloatingAction.js","app/components/screens/interviewer/CreateRoom.js","app/components/screens/interviewer/PastInterviews.js","app/components/screens/interviewer/Profile.js","app/utils/websocket.js","app/components/screens/interviewer/HomeScreen.js","app/utils/api/controllers/candidateCtrl.js","app/components/molecules/CandidateDetailsForm.js","app/components/screens/candidate/JoinRoomScreen.js","app/components/organism/CodeEditor.js","app/components/atoms/LoadScreen.js","app/utils/timeFormatter.js","app/components/organism/ChatWindow.js","app/utils/api/controllers/chatCtrl.js","app/components/organism/InterviewerWindow.js","app/components/screens/candidate/RoomCandidate.js","app/components/screens/interviewer/RoomInterviewer.js","app/Main.js","App.js","serviceWorker.js","index.js","app/res/icons/live.png","app/res/icons/offline.png"],"names":["module","exports","appTheme","createMuiTheme","palette","primary","indigo","secondary","teal","typography","fontFamily","googleConfig","backend","InterviewerLogin","props","onSubmit","data","email","password","React","useState","showPassword","setShowPassword","style","display","flexDirection","TextField","marginTop","label","variant","onChange","event","target","value","FormControl","InputLabel","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","edge","Visibility","VisibilityOff","Button","color","signInEndpoints","googleSignIn","emailSignIn","interviewerEndPoints","getOwnProfile","getOthersProfile","updateProfile","roomEndPoints","createRoom","checkRoom","checkInterviewer","getRoom","getRoomsByInterviewer","addInterviewer","removeInterviewer","candidateEndPoints","getCandidate","createCandidate","updateCandidate","chatEndPoints","getChats","UserData","userExists","tokenExists","idToken","profile","localStorage","getItem","JSON","parse","setProfileData","newProfile","setItem","stringify","getProfileData","setToken","newToken","getToken","setEmail","newEmail","getEmail","clearUser","removeItem","CandidateData","roomExists","candidateExists","roomId","candidateId","setRoomId","newRoomId","getRoomId","setCandidateId","newCandidateId","getCandidateId","clearCandidate","fetch","method","headers","withRouter","room","console","log","requestOptions","then","res","json","success","verified","history","push","catch","err","GoogleLoginButton","onSuccess","onFailure","render","renderProps","ButtonBase","justifyContent","margin","src","GoogleLogo","height","width","Typography","marginLeft","clientId","cookiePolicy","RedirectRoute","to","body","getProfile","getProfileById","id","InterviewerDialog","isOpen","onClose","Dialog","open","DialogTitle","DialogContent","response","profileObj","tokenId","jwt","newUser","msg","fontSize","DialogActions","CandidateDialog","interviewerDialog","setInterviewDialog","candidateDialog","setCandidateDialog","className","textAlign","flexGrow","alignContent","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storageRef","storage","ref","uploadFile","file","path","child","put","downloadFile","getDownloadURL","ImageUploader","onUpload","uploadState","uploading","setUploading","AvatarIcon","image","setImage","snackbarStatus","setSnackbarStatus","useEffect","url","flexWrap","borderRadius","outlineColor","Input","URL","createObjectURL","files","snapshot","CircularProgress","Snackbar","autoHideDuration","RegistrationForm","imageUploading","photo","defaultValue","name","phone","company","website","showSnackBar","setShowSnackBar","message","setMessage","fields","setFields","fieldName","setFieldName","fieldType","setFieldType","title","map","item","index","Chip","icon","FormatListNumbered","TextFields","onDelete","splice","marginBottom","marginRight","select","helpderText","MenuItem","Add","FloatingAction","Icon","text","Fab","bottom","right","Done","_id","ViewHolder","Card","magrin","rooms","setRooms","socket","socketIOClient","RequestMenu","requests","onAccept","onReject","anchor","Menu","anchorOrigin","vertical","horizontal","padding","anchorEl","connect","on","Header","setRequests","requestMenu","setRequestMenu","AppBar","maxHeight","Toolbar","Avatar","size","Home","window","Language","AccountBox","currentTarget","Badge","badgeContent","length","Notifications","disabled","onLogoutSuccess","request","emit","interviewer","Boolean","basename","exact","component","PastInterviews","CreateRoom","getCandidateProfile","Accept","details","setDetails","showSnackbar","setShowSnackbar","showValidate","candidate","inputMode","createCandidite","anch","WaitingDialog","onCancle","showWaitingDialog","setWaitingDialog","navigator","clipboard","writeText","FileCopy","CandidateDetailsForm","waiting","left","CodeEditor","sender","code","setCode","language","setLanguage","theme","setTheme","borderStyle","minWidth","key","BrightnessHigh","Brightness4","placeholder","mode","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","LoadScreen","monthShort","Chat","chatMarginLeft","chat","backColor","isCandidate","info","setInfo","backgroundColor","media","CloudDownload","dateISO","date","Date","hour","getHours","minute","getMinutes","getDate","getMonth","getFullYear","parseDate","createdAt","SendMessage","setText","setMedia","progress","setProgress","endIcon","Send","AttachFile","getTime","Delete","chats","setChats","newChats","concat","Close","overflowY","scrollSnapAlign","InterviewViewHolder","interviewerId","isLive","setInterviewer","live","setLive","isSelf","joined","Box","borderColor","Online","Offline","RequestDialog","setWaiting","snackBarMessage","setSnackBarMessage","InterviewerWindow","interviewers","setIntervieweres","setRoom","requestDialogOpen","setRequestDialogOpen","ActionBar","onButtonClick","People","ExitToApp","useParams","chatWindow","setChatWindow","peopleWindow","setPeopleWindow","interval","setInterval","addEventListener","ev","clearInterval","pos","CandidateBar","isJoined","setAnchor","candidateDetails","Object","entries","Person","InterviewScreen","candidateJoined","handleLeaveRoom","JoinCandidateDialog","onDecline","setCandidateInfo","sucess","checkStatus","setCheckStatus","requestedCandidate","setRequestedCandidate","showJoinDialog","setShowJoinDialog","setCandidateJoined","exists","Main","App","ThemeProvider","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,gFCA3CD,EAAOC,QAAU,IAA0B,kC,iLCGrCC,EAAWC,YAAe,CAC5BC,QAAQ,CACJC,QAAQC,IACRC,UAAUC,KAEdC,WAAW,CACPC,WAAW,oC,uBCENC,EACC,0EAQDC,EACH,sCADGA,EAEQ,kC,sJC0BNC,MA3Cf,SAA0BC,GACtB,IAAMC,EAAWD,EAAMC,SACnBC,EAAO,CACPC,MAAM,GACNC,SAAS,IAJe,EAQWC,IAAMC,UAAS,GAR1B,mBAQrBC,EARqB,KAQRC,EARQ,KAS5B,OACI,yBAAKC,MAAO,CACRC,QAAQ,OACRC,cAAc,WAEd,kBAACC,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBC,MAAM,QACNC,QAAQ,WACRC,SAAU,SAACC,GAASf,EAAKC,MAAQc,EAAMC,OAAOC,SAClD,kBAACC,EAAA,EAAD,CAAaL,QAAQ,WAAWN,MAAO,CAACI,UAAU,KAC9C,kBAACQ,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIC,KAAMhB,EAAc,OAAS,WAC7BS,SAAU,SAACC,GAASf,EAAKE,SAAWa,EAAMC,OAAOC,OACjDK,aACA,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAAIpB,GAAiBD,IAC9BsB,KAAK,OAERtB,EAAe,kBAACuB,EAAA,EAAD,MAAiB,kBAACC,EAAA,EAAD,WAMjD,kBAACC,EAAA,EAAD,CAAQvB,MAAO,CAACI,UAAU,IAAKe,QAAS,kBAAI3B,EAASC,IAAOa,QAAQ,YAAYkB,MAAM,WAAtF,WCtCKC,EAAkB,CAC3BC,aAHarC,EAGS,6BACtBsC,YAJatC,EAIQ,6BAGZuC,EAAuB,CAChCC,cARaxC,EAQU,uBACvByC,iBATazC,EASa,8BAC1B0C,cAVa1C,EAUU,uBAGd2C,EAAgB,CACzBC,WAda5C,EAcO,eACpB6C,UAfa7C,EAeO,cACpB8C,iBAhBa9C,EAgBc,0BAC3B+C,QAjBa/C,EAiBK,YAClBgD,sBAlBahD,EAkBkB,wBAC/BiD,eAnBajD,EAmBY,wBACzBkD,kBApBalD,EAoBe,4BAGnBmD,EAAqB,CAC9BC,aAxBapD,EAwBS,qBACtBqD,gBAzBarD,EAyBY,oBACzBsD,gBA1BatD,EA0BY,qBAGhBuD,EAAgB,CACzBC,SA9BaxD,EA8BK,oBC/BTyD,EAAW,WACpB,IAAIrD,EAAO,CACPsD,YAAW,EACXC,aAAY,EACZC,QAAQ,GACRvD,MAAM,GACNwD,QAAQ,IAuDZ,OApDAzD,EAAKwD,QAAUE,aAAaC,QAAQ,SACpC3D,EAAKyD,QAAUG,KAAKC,MAAMH,aAAaC,QAAQ,YAC/C3D,EAAKC,MAAQyD,aAAaC,QAAQ,SAE/B3D,EAAKyD,UACJzD,EAAKsD,YAAa,GAEnBtD,EAAKwD,UACJxD,EAAKuD,aAAc,GA4ChB,CAACO,eAzCR,SAAwBC,GACpB/D,EAAKyD,QAAUM,EACfL,aAAaM,QAAQ,UAAUJ,KAAKK,UAAUF,IAC9C/D,EAAKsD,YAAa,GAsCCY,eApCvB,WACI,OAAOlE,EAAKyD,SAmCsBU,SAhCtC,SAAkBC,GACdpE,EAAKwD,QAAUY,EACfV,aAAaM,QAAQ,QAAQI,GAC7BpE,EAAKuD,aAAc,GA6BwBc,SA3B/C,WACI,OAAOrE,EAAKwD,SA0BwCc,SAvBxD,SAAkBC,GACdvE,EAAKC,MAAQsE,EACbb,aAAaM,QAAQ,QAAQO,IAqBgCC,SAnBjE,WACI,OAAOxE,EAAKC,OAkB0DqD,WAf1E,WACI,OAAOtD,EAAKsD,YAcqEC,YAZrF,WACI,OAAOvD,EAAKuD,aAWiFkB,UARjG,WACIf,aAAagB,WAAW,SACxBhB,aAAagB,WAAW,WACxBhB,aAAagB,WAAW,SACxB1E,EAAKuD,aAAc,EACnBvD,EAAKsD,YAAa,IA1DF,GAiEXqB,EAAgB,WACzB,IAAI3E,EAAO,CACP4E,YAAW,EACXC,iBAAgB,EAChBC,OAAO,GACPC,YAAY,IA4ChB,OA1CA/E,EAAK8E,OAASpB,aAAaC,QAAQ,UACnC3D,EAAK+E,YAAcrB,aAAaC,QAAQ,eAErC3D,EAAK8E,SACJ9E,EAAK4E,YAAa,GAEnB5E,EAAK+E,cACJ/E,EAAK6E,iBAAkB,GAmCpB,CAACG,UAhCR,SAAmBC,GACfjF,EAAK8E,OAASG,EACdvB,aAAaM,QAAQ,SAASiB,GAC9BjF,EAAK4E,YAAa,GA6BJM,UA3BlB,WACI,OAAOlF,EAAK8E,QA0BaK,eAvB7B,SAAwBC,GACpBpF,EAAK+E,YAAcK,EACnB1B,aAAaM,QAAQ,cAAcoB,GACnCpF,EAAK6E,iBAAkB,GAoBkBQ,eAlB7C,WACI,OAAOrF,EAAK+E,aAiB6CF,gBAd7D,WACI,OAAO7E,EAAK6E,iBAa8DD,WAX9E,WACI,OAAO5E,EAAK4E,YAUyEU,eAPzF,WACI5B,aAAagB,WAAW,UACxBhB,aAAagB,WAAW,eACxB1E,EAAK6E,iBAAkB,EACvB7E,EAAK4E,YAAa,IA9CG,GChChBjC,EAAS,SAACmC,GAMnB,OAAOS,MAAMhD,EAAcI,QALJ,CACnB6C,OAAO,MACPC,QAAQ,CAAC,GAAKX,EAAO,eAAgB,uBCiC9BY,mBA7Df,SAAsB5F,GACDA,EAAMC,SAAvB,IACIC,EAAO,CACP2F,KAAK,GACLzF,SAAS,IAJW,EA0BeC,IAAMC,UAAS,GA1B9B,mBA0BjBC,EA1BiB,KA0BJC,EA1BI,KA2BxB,OACI,yBAAKC,MAAO,CACRC,QAAQ,OACRC,cAAc,WAEd,kBAACC,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBC,MAAM,UACNC,QAAQ,WACRC,SAAU,SAACC,GAASf,EAAK2F,KAAO5E,EAAMC,OAAOC,SACjD,kBAACC,EAAA,EAAD,CAAaL,QAAQ,WAAWN,MAAO,CAACI,UAAU,KAC9C,kBAACQ,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIC,KAAMhB,EAAc,OAAS,WAC7BS,SAAU,SAACC,GAASf,EAAKE,SAAWa,EAAMC,OAAOC,OACjDK,aACA,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAAIpB,GAAiBD,IAC9BsB,KAAK,OAERtB,EAAe,kBAACuB,EAAA,EAAD,MAAiB,kBAACC,EAAA,EAAD,WAMjD,kBAACC,EAAA,EAAD,CAAQvB,MAAO,CAACI,UAAU,IAAKe,QA/Cd,WACjBkE,QAAQC,IAAI,OAAO7F,GDDF,SAACA,GACtB,IAAM8F,EAAiB,CACnBN,OAAO,MACPC,QAAQ,CAAC,KAAOzF,EAAK2F,KAAK,SAAW3F,EAAKE,SAAS,eAAgB,qBAGvE,OAAOqF,MAAMhD,EAAcE,UAAWqD,GCJlCrD,CAAUzC,GAAM+F,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAChCF,MAAK,SAACC,GACHJ,QAAQC,IAAI,WAAWG,GACpBA,EAAIE,SACAF,EAAIG,WACHxB,EAAcK,UAAUhF,EAAK2F,MAC7B7F,EAAMsG,QAAQC,KAAK,iBAK5BC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,OAiC8B1F,QAAQ,YAAYkB,MAAM,aAAhF,iB,mCCzBOyE,MA5Bf,SAA2B1G,GACvB,IAAM2G,EAAY3G,EAAM2G,UAClBC,EAAY5G,EAAM4G,UAExB,OACI,6BACI,kBAAC,cAAD,CACIC,OAAQ,SAACC,GAAD,OACJ,kBAACC,EAAA,EAAD,CAAYnF,QAASkF,EAAYlF,SAC7B,yBAAKnB,MAAO,CAACC,QAAQ,OAAQC,cAAc,MAAOqG,eAAe,SAAUC,OAAO,KAC9E,yBAAKC,IAAOC,IAAY1G,MAAO,CAAC2G,OAAO,GAAIC,MAAM,MACjD,kBAACC,EAAA,EAAD,CAAY7G,MAAO,CAAC8G,WAAW,KAA/B,yBAMZZ,UAAWA,EACXC,UAAWA,EACXY,SAAU3H,EACV4H,aAAc,yBCHfC,MArBf,SAAuB1H,GAEnB,OAAGuD,EAASC,aAEJ,kBAAC,IAAD,CAAUmE,GAAG,iBAEZpE,EAASE,cAEV,kBAAC,IAAD,CAAUkE,GAAG,cAEZ9C,EAAcC,aAEf,kBAAC,IAAD,CAAU6C,GAAG,cAIb,kBAAC,IAAD,CAAUA,GAAG,OClBZnF,EAAgB,SAACtC,GAC1B4F,QAAQC,IAAI,OAAOjC,KAAKK,UAAUjE,IAClC,IAAM8F,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAE,MAASpC,EAASgB,WAAW,eAAgB,oBACvDqD,KAAM9D,KAAKK,UAAUjE,IAGzB,OAAOuF,MAAMpD,EAAqBG,cAAewD,IAIxC6B,EAAa,WACtB,IAAM7B,EAAiB,CACnBN,OAAO,MACPC,QAAQ,CAAE,MAASpC,EAASgB,WAAW,eAAgB,qBAG3D,OAAOkB,MAAMpD,EAAqBC,cAAe0D,IAGxC8B,EAAiB,SAACC,GAK3B,OAAOtC,MAAMpD,EAAqBE,iBAJX,CACnBmD,OAAO,MACPC,QAAQ,CAAE,GAAMoC,EAAG,eAAgB,uBCTrCC,EAAoBpC,aAAW,SAAC5F,GAClC,IAAMiI,EAASjI,EAAMiI,OACfC,EAAUlI,EAAMkI,QAoCtB,OACI,kBAACC,EAAA,EAAD,CAAQC,KAAMH,EAAQC,QAAWA,GAC7B,kBAACG,EAAA,EAAD,kCACA,kBAACC,EAAA,EAAD,CAAe7H,MAAO,CAACwG,OAAO,KAC1B,6BACI,kBAAC,EAAD,CAAgBhH,SAAW,SAACC,SAKpC,yBAAKO,MAAO,CAACwG,OAAO,SAChB,kBAAC,EAAD,CAAmBN,UA7CJ,SAAC4B,GACxB,IAAI5E,EAAU4E,EAASC,WACvB1C,QAAQC,IAAI,SCtBA,SAACwC,GACjB,IAAMvC,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAE,eAAgB,oBAC1BiC,KAAM9D,KAAKK,UAAU,CAAET,QAAS6E,EAASE,WAG7C,OAAOhD,MAAMvD,EAAgBC,aAAa6D,GDgBtC7D,CAAaoG,GAAUtC,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACvCF,MAAK,SAAC/F,GACH4F,QAAQC,IAAI,qBAGT7F,EAAKkG,SACJ7C,EAASc,SAASnE,EAAKwI,KAEvBnF,EAASiB,SAASb,EAAQxD,OACvBD,EAAKyI,QACJ3I,EAAMsG,QAAQC,KAAK,cAEnBT,QAAQC,IAAIxC,EAASgB,YACrBsD,IAAa5B,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC7BF,MAAK,SAACC,GACAA,EAAIE,SACH7C,EAASS,eAAekC,EAAIvC,SAC5B3D,EAAMsG,QAAQC,KAAK,iBAEnBT,QAAQC,IAAIG,EAAI0C,UAM5B9C,QAAQC,IAAI7F,EAAK0I,QAEtBpC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,OAcmCG,UAAa,SAAC2B,GAAYzC,QAAQC,IAAI,QAAQwC,OAErG,yBAAK9H,MAAO,CAACwG,OAAO,SAChB,kBAACF,EAAA,EAAD,CAAYnF,QAAS,cACjB,yBAAKnB,MAAO,CAACwG,OAAO,GAAIrH,WAAW,eAAgBiJ,SAAS,KAA5D,yBAKR,kBAACC,EAAA,EAAD,KACI,kBAAC9G,EAAA,EAAD,CAAQJ,QAASsG,GAAjB,eASVa,GAAkBnD,aAAW,SAAC5F,GAChC,IAAMiI,EAASjI,EAAMiI,OACfC,EAAUlI,EAAMkI,QACtB,OACI,kBAACC,EAAA,EAAD,CAAQC,KAAMH,EAAQC,QAASA,EAASzH,MAAO,CAACwG,OAAO,KACnD,kBAACoB,EAAA,EAAD,iCACA,kBAACC,EAAA,EAAD,CAAe7H,MAAO,CAACwG,OAAO,KACtB,6BACI,kBAAC,EAAD,QAGZ,kBAAC6B,EAAA,EAAD,KACI,kBAAC9G,EAAA,EAAD,CAAQJ,QAASsG,GAAjB,eAsDDtC,oBA9Cf,SAAqB5F,GAAO,IAAD,EACwBK,IAAMC,UAAS,GADvC,mBAChB0I,EADgB,KACEC,EADF,OAEsB5I,IAAMC,UAAS,GAFrC,mBAEhB4I,EAFgB,KAEAC,EAFA,KAIvB,OACA,yBAAKC,UAAU,QACX,kBAAC,EAAD,MACA,yBAAK3I,MAAO,CACRoI,SAAS,GACTjJ,WAAW,eACXyJ,UAAU,WAHd,wBAMM,6BAEN,yBAAK5I,MAAO,CACR4I,UAAU,WADd,sDAMA,yBAAK5I,MAAO,CACR6I,SAAS,EACT3I,cAAc,MACd4I,aAAa,SACbtC,OAAO,OACPpG,UAAU,KAEV,kBAACmB,EAAA,EAAD,CAAQC,MAAM,UAAUlB,QAAQ,YAAYN,MAAO,CAC/CwG,OAAO,IACRrF,QAAS,kBAAIqH,GAAmB,KAFnC,0BAKA,kBAACjH,EAAA,EAAD,CAAQC,MAAM,YAAYlB,QAAQ,YAAYN,MAAO,CACjDwG,OAAO,IACRrF,QAAS,kBAAKuH,GAAmB,KAFpC,wBAOJ,kBAACnB,EAAD,CAAmBC,OAAUe,EAAmBd,QAAW,kBAAKe,GAAmB,MACnF,kBAACF,GAAD,CAAiBd,OAAUiB,EAAiBhB,QAAW,kBAAKiB,GAAmB,U,8BE/IvFK,IAASC,cXJqB,CAC1BC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBWHnB,IAAMC,GAAaV,IAASW,UAAUC,MAGzBC,GAAa,SAACC,EAAKC,GAE5B,OADgBL,GAAWM,MAAMD,GAClBE,IAAIH,IAGVI,GAAe,SAACH,GAEzB,OADgBL,GAAWM,MAAMD,GAClBI,kB,qBCPnB,SAASC,GAAc5K,GAAO,IACnB6K,EAA6B7K,EAA7B6K,SAAqBN,GAAQvK,EAApB8K,YAAoB9K,EAARuK,MADH,EAGQlK,IAAMC,UAAS,GAHvB,mBAGlByK,EAHkB,KAGRC,EAHQ,OAIA3K,IAAMC,SAAS2K,MAJf,mBAIlBC,EAJkB,KAIZC,EAJY,OAKmB9K,IAAMC,UAAS,GALlC,mBAKlB8K,EALkB,KAKFC,EALE,KAQzBC,qBAAU,WACK,IAARf,GAGHG,GAAaH,GAAMtE,MAAK,SAACsF,GACrBzF,QAAQC,IAAI,MAAMwF,GAClBJ,EAASI,QAGf,CAAC,IAoBH,OACI,yBAAK9K,MAAO,CAACC,QAAQ,OAAQC,cAAc,MAAO6K,SAAS,SACvD,6BACI,yBAAKtE,IAAOgE,EAAOzK,MAAO,CAAC2G,OAAO,IAAIC,MAAM,IAAKoE,aAAa,GAAIC,aAAa,cAEnF,yBAAKjL,MAAO,CAACC,QAAQ,OAAO6I,aAAa,SAAUiC,SAAS,OAAQjE,WAAW,KAC3E,kBAACoE,GAAA,EAAD,CAAOpK,KAAK,OAAOP,SAvBL,SAACC,GACvBkK,EAASS,IAAIC,gBAAgB5K,EAAMC,OAAO4K,MAAM,KAChD,IAAMxB,EAAOrJ,EAAMC,OAAO4K,MAAM,GAChCd,GAAa,GACb,IAAMT,EAAO,WAAWhH,EAASmB,WAAW,oBAC5C2F,GAAWC,EAAKC,GACftE,MAAK,SAAC8F,GACHf,GAAa,GACblF,QAAQC,IAAI,uBACZ8E,EAASN,MAEV/D,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,SAYfsE,EAAW,kBAACiB,GAAA,EAAD,MAAoB,+BAGpC,kBAACC,GAAA,EAAD,CAAU7D,KAAMgD,EAAgBc,iBAAkB,IAAMhE,QAAS,WAAKmD,GAAkB,KAAxF,uBAoDGc,OA5Cf,SAA0BnM,GAAO,IACxBC,EAAiBD,EAAjBC,SAASC,EAAQF,EAARE,KADc,EAGgBG,IAAMC,UAAS,GAH/B,mBAGrB8L,EAHqB,KAK5B,OAL4B,KAMxB,yBAAK3L,MAAO,CAACC,QAAQ,OAAQC,cAAc,SAAU6K,SAAS,SAE1D,kBAACZ,GAAD,CAAeL,KAAMrK,EAAKmM,MAAOxB,SAAU,SAACN,GAAQrK,EAAKmM,MAAO9B,GAAOO,YAAasB,IAEpF,kBAACxL,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBE,QAAQ,WACRD,MAAM,OACNwL,aAAcpM,EAAKqM,KACnBvL,SAAU,SAACC,GAASf,EAAKqM,KAAOtL,EAAMC,OAAOC,SACjD,kBAACP,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBE,QAAQ,WACRD,MAAM,QACNwL,aAAcpM,EAAKsM,MACnBxL,SAAU,SAACC,GAASf,EAAKsM,MAAQvL,EAAMC,OAAOC,SAClD,kBAACP,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBE,QAAQ,WACRD,MAAM,0BACNwL,aAAcpM,EAAKuM,QACnBzL,SAAU,SAACC,GAASf,EAAKuM,QAAUxL,EAAMC,OAAOC,SACpD,kBAACP,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBE,QAAU,WACVD,MAAO,UACPwL,aAAgBpM,EAAKwM,QACrB1L,SAAY,SAACC,GAASf,EAAKwM,QAAUzL,EAAMC,OAAOC,SACtD,yBAAKV,MAAO,CAAC6I,SAAS,IAClB,kBAACtH,EAAA,EAAD,CAAQjB,QAAQ,YAAYkB,MAAM,UAAUxB,MAAO,CAACI,UAAU,IAAKe,QAAS,WAAK3B,MAAjF,aCbD2F,oBAxEf,SAAwB5F,GAAO,IAAD,EAEcK,IAAMC,UAAS,GAF7B,mBAEnBqM,EAFmB,KAELC,EAFK,OAGGvM,IAAMC,SAAS,IAHlB,mBAGnBuM,EAHmB,KAGXC,EAHW,KAKtB5M,EAAO,CACPqM,KAAK,GACLC,MAAM,GACNC,QAAQ,GACRC,QAAQ,GACRL,MAAM,IA8CV,OACI,yBAAKjD,UAAU,OAAO3I,MAAO,CAAC+K,SAAS,SACnC,kBAAC,EAAD,MACA,yBAAK/K,MAAO,CAACb,WAAW,eAAgBiJ,SAAS,GAAIQ,UAAU,WAA/D,6BAGA,yBAAK5I,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAAU6K,SAAS,OAAQvE,OAAO,OAAQsC,aAAa,SAAU1I,UAAU,KACjH,kBAAC,GAAD,CAAkBX,KAAQA,EAAMD,SAhCvB,WACjB,KAlBgB,IAAbC,EAAKqM,MACJO,EAAW,wBACJ,GACW,IAAb5M,EAAKsM,OACVM,EAAW,gCACJ,GACc,IAAhB5M,EAAKuM,SACVK,EAAW,2BACJ,GACc,IAAhB5M,EAAKwM,UACVI,EAAW,2BACJ,IASP,OADAF,GAAgB,IACT,EAIX9G,QAAQC,IAAI,QAAQxC,EAASgB,YAC7B/B,EAActC,GAAM+F,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACpCF,MAAK,SAACC,GACH,OAAO2B,IAAa5B,MAAK,SAACC,GAAD,OAAQA,EAAIC,aACtCF,MAAK,SAACC,GACFA,EAAIE,SACHN,QAAQC,IAAI,WAAWG,GACvB3C,EAASS,eAAekC,EAAIvC,SAC5BJ,EAASC,YAAW,GACpBxD,EAAMsG,QAAQC,KAAK,iBAEnBT,QAAQC,IAAI,QAAQG,EAAI0C,QAE7BpC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,UAcpB,kBAACwF,GAAA,EAAD,CAAU7D,KAAQuE,EAAcE,QAASA,EAAS3E,QAAW,WAAK0E,GAAgB,U,mLCe/EhH,oBAxFf,SAAwB5F,GACHA,EAAMC,SADI,IAAD,EAEpBC,EAAOF,EAAME,KAFO,EAGEG,IAAMC,SAAS,IAHjB,mBAGnByM,EAHmB,KAGXC,EAHW,OAIQ3M,IAAMC,SAAS,IAJvB,mBAInB2M,EAJmB,KAIRC,EAJQ,OAKO7M,IAAMC,SAAS,IALtB,mBAKnB6M,EALmB,KAKTC,EALS,OAMa/M,IAAMC,UAAS,GAN5B,mBAMnBC,EANmB,KAMNC,EANM,KAS1B,OACI,yBAAKC,MAAO,CAACC,QAAQ,OAASC,cAAc,SAAU6K,SAAS,SAC3D,kBAAClE,EAAA,EAAD,CAAYvG,QAAQ,MAApB,4BAGA,kBAACH,EAAA,EAAD,CACIH,MAAO,CAACwG,OAAO,GAAGpG,UAAU,IAC5BC,MAAM,QACNC,QAAQ,WACRC,SAAU,SAACC,GAASf,EAAKmN,MAAQpM,EAAMC,OAAOC,SAIlD,yBAAKV,MAAO,CAACC,QAAQ,OAAO8K,SAAS,OAAQnE,MAAM,IAAKxG,UAAU,KAC7DkM,EAAOO,KAAI,SAACC,EAAKC,GAAN,OACR,kBAACC,GAAA,EAAD,CACIhN,MAAO,CAACwG,OAAO,IACfyG,KAAmB,UAAbH,EAAKhM,KAAiB,kBAACoM,GAAA,EAAD,MAAsB,kBAACC,GAAA,EAAD,MAClD9M,MAAOyM,EAAKhB,KACZtK,MAAM,YACN4L,SAAU,WAAKd,EAAOe,OAAON,EAAM,GAAIR,EAAUD,UAI7D,yBAAKtM,MAAO,CAACC,QAAQ,OAAQ8K,SAAS,OAAQ7K,cAAc,SAAS2I,SAAS,EAAGzI,UAAU,KACvF,kBAACyG,EAAA,EAAD,CAAYvG,QAAQ,MAApB,+BAGA,yBAAKN,MAAO,CAACC,QAAQ,OAAQG,UAAU,GAAIkN,aAAa,KACpD,kBAACnN,EAAA,EAAD,CACIH,MAAO,CAACuN,YAAY,GAAI3G,MAAM,KAC9B4G,QAAM,EACNjN,SAAU,SAACC,GAASmM,EAAanM,EAAMC,OAAOC,QAC9CJ,QAAQ,WACRD,MAAM,aACNoN,YAAY,gCACR,kBAACC,GAAA,EAAD,CAAUhN,MAAM,UAAhB,UAGA,kBAACgN,GAAA,EAAD,CAAUhN,MAAM,QAAhB,SAIR,kBAACP,EAAA,GAAD,GACIH,MAAO,CAAC4G,MAAM,KACdvG,MAAM,aACNC,QAAU,YAHd,uBAIW,IAJX,2BAKc,SAACE,GAASiM,EAAajM,EAAMC,OAAOC,UALlD,KAQJ,6BACI,kBAACa,EAAA,EAAD,CAAQJ,QAAS,WAAKmL,EAAOxG,KAAK,CAACgG,KAAKU,EAAU1L,KAAK4L,IAAajN,EAAK6M,OAASA,EAAQG,EAAa,IAAKE,EAAa,KAASrM,QAAQ,YAAYkB,MAAM,WACxJ,kBAACmM,GAAA,EAAD,MADJ,UAMR,kBAAChN,EAAA,EAAD,CAAaL,QAAQ,WAAWN,MAAO,CAACI,UAAU,KAC9C,kBAACQ,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIC,KAAMhB,EAAc,OAAS,WAC7BS,SAAU,SAACC,GAASf,EAAKE,SAAWa,EAAMC,OAAOC,OACjDK,aACA,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAAIpB,GAAiBD,IAC9BsB,KAAK,OAERtB,EAAe,kBAACuB,EAAA,EAAD,MAAiB,kBAACC,EAAA,EAAD,e,UCjE1CsM,GAdQzI,aAAW,SAAC5F,GAC/B,IAAMsO,EAAOtO,EAAM0N,KACba,EAAOvO,EAAMuO,KACb3M,EAAU5B,EAAM4B,QACtB,OACI,kBAAC4M,GAAA,EAAD,CAAKzN,QAAQ,WAAWkB,MAAM,YAAaxB,MAAO,CAACiB,SAAS,WAAY+M,OAAO,GAAIC,MAAM,IACrF9M,QAASA,GAET,kBAAC0M,EAAD,MACCC,MC2DE3I,oBA7Df,SAA0B5F,GAAO,IAAD,EAEWK,IAAMC,UAAS,GAF1B,mBAErBqM,EAFqB,KAERC,EAFQ,KAIxB1M,EAAM,CACNmN,MAAM,GACNN,OAAO,GACP3M,SAAS,IAmCb,OACI,yBAAKK,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAG3I,cAAc,SAAS4I,aAAa,SAAUtC,OAAO,KAEzF,kBAACK,EAAA,EAAD,CAAYvG,QAAS,MAArB,eAIA,yBAAKN,MAAO,CAACC,QAAQ,OAAQsG,eAAe,WACxC,kBAAC,GAAD,CAAgB9G,KAAQA,KAG5B,kBAAC,GAAD,CAAgBwN,KAAQiB,KAAMJ,KAAK,SAAS3M,QA/B/B,WAXA,IAAd1B,EAAKmN,OAECnN,EAAK6M,QAAU,IAEE,IAAjB7M,EAAKE,SZxBI,SAACF,GACvB4F,QAAQC,IAAI,OAAOjC,KAAKK,UAAUjE,IAClC,IAAM8F,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAE,MAASpC,EAASgB,WAAW,eAAgB,oBACvDqD,KAAM9D,KAAKK,UAAUjE,IAGzB,OAAOuF,MAAMhD,EAAcC,WAAYsD,GY6BnCtD,CAAWxC,GAAM+F,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACjCF,MAAK,SAACC,GACAA,EAAIE,SAEHN,QAAQC,IAAI,gBAAiBG,EAAIL,MACjC7F,EAAMsG,QAAQC,KAAK,WAAWL,EAAIL,KAAK+I,MAEvC9I,QAAQC,IAAI,QAAQG,EAAI0C,QAE7BpC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,MAdpBmG,GAAgB,MA+BhB,kBAACX,GAAA,EAAD,CAAU7D,KAAQuE,EAAcE,QAAQ,+BAA+B3E,QAAS,kBAAI0E,GAAgB,U,UCxD1GiC,GAAajJ,aAAW,SAAS5F,GAAO,IACnC6F,EAAgB7F,EAAhB6F,KAAKS,EAAWtG,EAAXsG,QAMZ,OACI,kBAACwI,GAAA,EAAD,KACI,yBAAKrO,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAASsG,OAAO,KACtD,kBAACK,EAAA,EAAD,CAAY7G,MAAO,CAACwG,OAAO,KAA3B,aACepB,EAAK+I,KAEpB,kBAACtH,EAAA,EAAD,CAAY7G,MAAO,CAACsO,OAAO,IAAKhO,QAAQ,OAAxC,WACa8E,EAAKwH,OAGlB,kBAACrL,EAAA,EAAD,CAAQJ,QAdI,WACpB0E,EAAQC,KAAK,UAAUV,EAAK+I,MAacnO,MAAO,CAACwG,OAAO,IAAKlG,QAAQ,YAAYkB,MAAM,WAAhF,mBA2CD2D,oBAnCf,SAAwB5F,GAAO,IAAD,EAEDK,IAAMC,SAAS,IAFd,mBAEnB0O,EAFmB,KAEbC,EAFa,KAa1B,OATA3D,qBAAU,YboBuB,WACjC,IAAMtF,EAAiB,CACnBN,OAAO,MACPC,QAAQ,CAAC,MAAQpC,EAASgB,WAAW,eAAgB,qBAGzD,OAAOkB,MAAMhD,EAAcK,sBAAsBkD,IazB7ClD,GAAwBmD,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACxCF,MAAK,SAACC,GACAA,EAAIE,SACH6I,EAAS/I,EAAI8I,YAGvB,CAAC,IAIC,yBAAKvO,MAAO,CAACwG,OAAO,KAChB,kBAACK,EAAA,EAAD,CAAYvG,QAAS,MAArB,cAIA,yBAAKN,MAAO,CAACC,QAAQ,OAAOuG,OAAO,KAE9B+H,EAAM1B,KAAI,SAACC,EAAKC,GAAN,OACP,yBAAK/M,MAAO,CAACC,QAAQ,OAAOuG,OAAO,KAC/B,kBAAC4H,GAAD,CAAYhJ,KAAQ0H,SAMhC,kBAAC,GAAD,CAAgBG,KAAMU,KAAKG,KAAK,qBAAqB3M,QAAS,WAAK5B,EAAMsG,QAAQC,KAAK,qBCZnFX,oBA3Cf,SAAiB5F,GAAO,IACbE,EAAgBF,EAAhBE,KADY,GACIF,EAAXsG,QAE2BjG,IAAMC,UAAS,IAHnC,mBAGZqM,EAHY,KAGCC,EAHD,KA4BnB,OACI,yBAAKnM,MAAO,CAACwG,OAAO,KAChB,kBAACK,EAAA,EAAD,CAAYvG,QAAS,MAArB,WAGA,yBAAKN,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAAU6K,SAAS,OAAQvE,OAAO,OAAQsC,aAAa,SAAU1I,UAAU,KACjH,kBAAC,GAAD,CAAkBX,KAAQA,EAAMD,SA7BvB,SAACC,GAElB4F,QAAQC,IAAI,QAAQxC,EAASgB,YAC7B/B,EAActC,GAAM+F,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACpCF,MAAK,SAACC,GACH,OAAO2B,IAAa5B,MAAK,SAACC,GAAD,OAAQA,EAAIC,aACtCF,MAAK,SAACC,GACFA,EAAIE,SACHN,QAAQC,IAAI,WAAWG,GACvB3C,EAASS,eAAekC,EAAIvC,SAC5BJ,EAASC,YAAW,GAGpBoJ,GAAgB,IAGhB9G,QAAQC,IAAI,QAAQG,EAAI0C,QAE7BpC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,UAapB,kBAACwF,GAAA,EAAD,CAAU7D,KAAMuE,EAAcE,QAAQ,gCAAgC3E,QAAS,WAAK0E,GAAgB,U,UC7CnGsC,G,OAASC,GAAerP,GCuBrC,SAASsP,GAAYpP,GAAO,IACjBoI,EAAmDpI,EAAnDoI,KAAKiH,EAA8CrP,EAA9CqP,SAASC,EAAqCtP,EAArCsP,SAASC,EAA4BvP,EAA5BuP,SAAUrH,EAAkBlI,EAAlBkI,QAAQsH,EAAUxP,EAAVwP,OAMhD,OAJAlE,qBAAU,WACNxF,QAAQC,IAAI,WAAWsJ,KACzB,CAAC,IAGC,6BACI,kBAACI,GAAA,EAAD,CAAMrH,KAAQA,EAAMsH,aAAc,CAC5BC,SAAU,SACVC,WAAY,SAEX1H,QAASA,EACZzH,MAAO,CAACoP,QAAQ,IAChBC,SAAUN,GAEV,yBAAK/O,MAAO,CAACwG,OAAO,KAChB,8CAGA,yBAAKxG,MAAO,CAACC,QAAQ,OAAQC,cAAc,SAAUsG,OAAO,KACvDoI,EAAS/B,KAAI,SAACC,EAAKC,GAAN,OACV,6CACkBD,EAAKpN,MACnB,6BAFJ,aAGeoN,EAAK1H,KAChB,6BACA,kBAAC7D,EAAA,EAAD,CAAQJ,QAAW,WAAK0N,EAAS/B,KAAjC,UAGA,kBAACvL,EAAA,EAAD,CAAQJ,QAAW,kBAAI2N,EAAShC,KAAhC,kBDrDhC2B,GAAOa,UAEPb,GAAOc,GAAG,cAAa,eCkEvB,IAAOC,GAASrK,aAAW,SAAS5F,GAAO,IAChCsG,EAAWtG,EAAXsG,QAD+B,EAETjG,IAAMC,SAAS,IAFN,gCAGPD,IAAMC,SAAS,KAHR,mBAG/B+O,EAH+B,KAGtBa,EAHsB,OAID7P,IAAMC,SAAS,MAJd,mBAI/B6P,EAJ+B,KAInBC,EAJmB,KAMtC9E,qBAAU,WACNxF,QAAQC,IAAI,KAAKxC,EAASa,kBAC1B8K,GAAOc,GAAG,oBAAoBzM,EAASa,iBAAiBwK,KAAK,SAAC1O,GAC1D4F,QAAQC,IAAI,UAAU7F,GACtBgQ,EAAY,GAAD,oBAAKb,GAAL,CAAcnP,UAE/B,CAAC,IAwBH,OACI,kBAACmQ,GAAA,EAAD,CAAQ3O,SAAS,SAASjB,MAAO,CAAC6P,UAAU,MACxC,kBAACC,GAAA,EAAD,CAAS9P,MAAO,CAACoP,QAAQ,KACrB,6BACI,yBAAK3I,IAAOsJ,KAAQ/P,MAAO,CAAC2G,OAAO,IAAKC,MAAM,QAElD,kBAACC,EAAA,EAAD,CAAYvG,QAAQ,KAAKN,MAAO,CAACb,WAAW,eAAgB0J,SAAS,EAAGrC,OAAO,KAC1E1D,EAASa,iBAAiBmI,MAE/B,kBAACjF,EAAA,EAAD,CAAYvG,QAAQ,KAAKN,MAAO,CAACb,WAAW,eAAgB0J,SAAS,EAAGrC,OAAO,GAAIhF,MAAM,YACpFsB,EAASa,iBAAiBqI,SAG/B,6BACI,kBAAC9K,EAAA,EAAD,CAAY8O,KAAK,SAASxO,MAAM,UAAUL,QAAW,WAAK0E,EAAQC,KAAK,SACnE,kBAACmK,GAAA,EAAD,OAEJ,kBAAC/O,EAAA,EAAD,CAAY8O,KAAK,SAASxO,MAAM,UAAUL,QAAW,WACjD+O,OAAOvI,KAAK7E,EAASa,iBAAiBsI,QAAQ,YAE9C,kBAACkE,GAAA,EAAD,OAEJ,kBAACjP,EAAA,EAAD,CAAY8O,KAAK,SAASxO,MAAM,UAAUL,QAAS,WAAK0E,EAAQC,KAAK,eACjE,kBAACsK,GAAA,EAAD,OAEJ,kBAAClP,EAAA,EAAD,CAAY8O,KAAK,SAASxO,MAAM,UAAUL,QAAS,SAACX,GAASmP,EAAenP,EAAM6P,iBAC9E,kBAACC,GAAA,EAAD,CAAOC,aAAc3B,EAAS4B,OAAQhP,MAAM,aACxC,kBAACiP,GAAA,EAAD,QAIR,kBAAC,eAAD,CACQ1J,SAAU3H,EACVgH,OACI,SAACC,GAAD,OACI,kBAAC9E,EAAA,EAAD,CAAQC,MAAM,UAAUL,QAASkF,EAAYlF,QAASuP,SAAWrK,EAAYqK,UAA7E,WAKRC,gBA9CH,WACjB7N,EAASoB,YACT2B,EAAQC,KAAK,UAmDD,kBAAC6I,GAAD,CAAaI,OAASW,EAAab,SArEvB,SAAC+B,GACzBnC,GAAOoC,KAAK,qBAAqB,CAACzL,KAAKwL,EAAQxL,KAAK0L,YAAYhO,EAASa,iBAAiBwK,IAAI1I,KAAI,IhB7C5E,SAAClB,GAC3B,IAAMgB,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAE,MAASpC,EAASgB,WAAW,KAAOS,EAAO,eAAgB,qBAGzE,OAAOS,MAAMhD,EAAcM,eAAgBiD,GgByCvCjD,CAAesO,EAAQxL,MAAMI,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC7CF,MAAK,SAACC,GACAA,EAAIE,SAEHpG,EAAMsG,QAAQC,KAAK,QAAQ8K,EAAQxL,UA8DmC0J,SAzDtD,SAAC8B,GACzBnC,GAAOoC,KAAK,qBAAqB,CAACzL,KAAKwL,EAAQxL,KAAK0L,YAAYhO,EAASa,iBAAiBwK,IAAI1I,KAAI,KAwDWmJ,SAAUA,EAAUjH,KAAQoJ,QAAQrB,GAAcjI,QAAU,WAAKkI,EAAe,eA0BtLxK,oBAnBf,SAAoB5F,GAAO,IAAD,EACWK,IAAMC,SAAS,QAD1B,mBAItB,OAJsB,UAKlB,yBAAK8I,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAYqI,SAAS,gBACjB,kBAACxB,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyB,OAAK,EAACnH,KAAO,IAAIoH,UAAcC,KACtC,kBAAC,IAAD,CAAOrH,KAAK,cAAcoH,UAAYE,KACtC,kBAAC,IAAD,CAAOtH,KAAK,YAAW,kBAAC,GAAD,CAASrK,KAAQqD,EAASa,0B,UClKxD0N,GAAsB,SAAC7M,GAMhC,OAAOQ,MAAMxC,EAAmBC,aALT,CACnBwC,OAAO,MACPC,QAAQ,CAAC,UAAYV,EAAY8M,OAAO,uBC+FjCnM,oBAnGf,SAAyB5F,GAAO,IAOxB6F,EAPuB,EACAxF,IAAMC,SAAS,IADf,mBACpByM,EADoB,KACbC,EADa,QAEZnI,EAAcO,YACA/E,IAAMC,SAAS,KAHjB,mBAGpB0R,EAHoB,KAGZC,EAHY,OAIY5R,IAAMC,UAAS,GAJ3B,mBAIpB4R,EAJoB,KAIPC,EAJO,OAKY9R,IAAMC,UAAS,GAL3B,mBAKpB8R,EALoB,KAoE3B,OApE2B,KAS3B9G,qBAAU,WACHzG,EAAcE,oBACbe,QAAQC,IAAI,uBACZD,QAAQC,IAAI,cAAelB,EAAcU,kBDpB3B,WACtB,IAAMS,EAAiB,CACnBN,OAAO,MACPC,QAAQ,CAAC,UAAYd,EAAcU,iBAAiBwM,OAAO,qBAG/D,OAAOtM,MAAMxC,EAAmBC,aAAc8C,GCetC6B,GAAa5B,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC7BF,MAAK,SAACC,GACHJ,QAAQC,IAAIG,EAAImM,WACbnM,EAAIE,SACH6L,EAAW/L,EAAImM,UAAUL,YAI9BxL,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,OAM5B5D,EAAQgC,EAAcO,aAAaa,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACnDF,MAAK,SAACC,GACHJ,QAAQC,IAAI,WAAWG,GACpBA,EAAIE,UACHP,EAAOK,EAAIL,KACXmH,EAAUnH,EAAKkH,cAIzB,CAAC,IAgCC,yBAAKtM,MAAO,CAACC,QAAQ,OAAQC,cAAc,SAAU6K,SAAS,OAAQjC,aAAa,WAE/E,yBAAK9I,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAApC,qBAGC0D,EAAOO,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC5M,EAAA,EAAD,CACIH,MAAO,CAACI,UAAU,IAClBC,MAAOyM,EAAKhB,KACZxL,QAAQ,WACRuL,aAAc0F,EAAQzE,EAAKhB,MAC3BvL,SAAU,SAACC,GAAS+Q,EAAQzE,EAAKhB,MAAQtL,EAAMC,OAAOC,OACtDmR,UAAwB,UAAb/E,EAAKhM,KAAkB,UAAU,YAGpD,kBAACS,EAAA,EAAD,CAAQC,MAAM,UAAUlB,QAAS,YAAYN,MAAO,CAACI,UAAU,IAAKe,QA7CnD,WACrBkE,QAAQC,IAAI,OAAOiM,GAEhBnN,EAAcE,kBDtBM,SAAC7E,GAC5B,IAAM8F,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAC0M,UAAUxN,EAAcU,iBAAiB,eAAgB,oBAClEqC,KAAK9D,KAAKK,UAAUjE,IAGxB,OAAOuF,MAAMxC,EAAmBG,gBAAiB4C,GCgBzC5C,CAAgB4O,GAAS/L,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACzCF,MAAK,SAACC,GACAA,EAAIE,SACH+L,GAAgB,MAErB3L,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,MDvCN,SAACvG,GAC3B,IAAM8F,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAC,eAAgB,oBACzBiC,KAAK9D,KAAKK,UAAUjE,IAGxB,OAAOuF,MAAMxC,EAAmBE,gBAAiB6C,GCmCzCuM,CAAgBP,GAAS/L,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACzCF,MAAK,SAACC,GACAA,EAAIE,SACH+L,GAAgB,GAChBrM,QAAQC,IAAI,kCACZD,QAAQC,IAAI,WAAWG,EAAImM,UAAUzD,KACrC/J,EAAcQ,eAAea,EAAImM,UAAUzD,MAE3C9I,QAAQC,IAAI,QAAQG,EAAI0C,QAE7BpC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,OAqBuE+L,MAAI,GAAnG,kBAIA,kBAACvG,GAAA,EAAD,CAAU7D,KAAQ8J,EAAcrF,QAAU,kCAAkCX,iBAAkB,IAAMhE,QAAS,WAAKiK,GAAgB,IAC9HzC,aAAc,CACVC,SAAU,SACVC,WAAY,YAGpB,kBAAC3D,GAAA,EAAD,CAAU7D,KAAQgK,EAAcvF,QAAU,wBAAwB3E,QAAS,kBAAIkK,GAAa,UC3FxG,SAASK,GAAczS,GAAO,IACnBoI,EAAgBpI,EAAhBoI,KAAKsK,EAAW1S,EAAX0S,SAEZ,OACI,6BACI,kBAACvK,EAAA,EAAD,CAAQC,KAAMA,GACV,kBAACC,EAAA,EAAD,kDACA,kBAACC,EAAA,EAAD,KACI,kBAAC0D,GAAA,EAAD,CACIjL,QAAQ,gBACR0P,KAAM,IACNhQ,MAAO,CAACwG,OAAO,WAGvB,kBAAC6B,EAAA,EAAD,KACI,kBAAC9G,EAAA,EAAD,CAAQJ,QAAS8Q,GAAjB,aA0FL9M,oBAhFf,SAAwB5F,GACpB,IAAMgF,EAASH,EAAcO,YADH,EAEmB/E,IAAMC,UAAS,GAFlC,mBAEnBqS,EAFmB,KAEDC,EAFC,OAGavS,IAAMC,UAAS,GAH5B,mBAGnBqM,EAHmB,KAGNC,EAHM,KAmC1B,OACI,yBAAKnM,MAAO,CAACC,QAAQ,OAAQsG,eAAe,SAAUrG,cAAc,WAChE,kBAAC,EAAD,MACA,yBAAKF,MAAO,CAACC,QAAQ,OAAQC,cAAc,WACvC,yBAAKF,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAApC,mBAGA,yBAAK5I,MAAO,CAACC,QAAQ,OAAQsG,eAAe,WACxC,yBAAKvG,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAApC,aAGA,yBAAK5I,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAC/BxE,EAAcO,aAGnB,kBAACpD,EAAA,EAAD,CAAQJ,QAAS,WACbiR,UAAUC,UAAUC,UAAUlO,EAAcO,eAC5C,kBAAC4N,GAAA,EAAD,SAKZ,yBAAKvS,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAAU4I,aAAa,WAC7D,kBAAC0J,GAAD,OAGJ,kBAACzE,GAAA,EAAD,CAAKzN,QAAQ,WAAWkB,MAAM,YAAaxB,MAAO,CAACiB,SAAS,WAAY+M,OAAO,GAAIC,MAAM,IACzF9M,QAvDe,WAEnB,IAAIiD,EAAcE,kBAEd,OADA6H,GAAgB,IACT,EAEXgG,GAAiB,GACjB9M,QAAQC,IAAI,OAAOf,GACnBkK,GAAOoC,KAAK,UAAU,CAACzL,KAAKb,EAAQqN,UAAUxN,EAAcU,iBAAkB2N,SAAQ,IAEtFhE,GAAOc,GAAG,gBAAgBhL,GAAO,SAAC9E,GAC9B4F,QAAQC,IAAI,WAAW7F,GACvB0S,GAAiB,GACjB5S,EAAMsG,QAAQC,KAAK,qBAAqB1B,EAAcO,kBAyCtD,aAKA,kBAACoJ,GAAA,EAAD,CAAKzN,QAAQ,WAAYN,MAAO,CAACiB,SAAS,WAAY+M,OAAO,GAAI0E,KAAK,IACtEvR,QArCgB,WACpBiD,EAAcW,iBACdxF,EAAMsG,QAAQC,KAAK,SAkCf,cAMA,kBAACkM,GAAD,CAAerK,KAAMuK,EAAmBD,SAhDnB,WACzBE,GAAiB,GAEjB1D,GAAOoC,KAAK,UAAU,CAACzL,KAAKb,EAAQqN,UAAUxN,EAAcU,iBAAiB2N,SAAQ,OA+CjF,kBAACjH,GAAA,EAAD,CAAUY,QAAU,4BAA4BzE,KAAQuE,EAAczE,QAAS,kBAAI0E,GAAgB,U,+GCyBhGwG,OA/Gf,SAAoBpT,GAAO,IAInBqT,EAHGrO,EAAUhF,EAAVgF,OADe,EAEC3E,IAAMC,SAAS,IAFhB,mBAEfgT,EAFe,KAEVC,EAFU,KAOlBF,EADDxO,EAAcE,kBACJF,EAAcU,iBAEdhC,EAASa,iBAAiBwK,IAGvC,IAZsB,EAgBSvO,IAAMC,SAAS,GAhBxB,mBAgBfkT,EAhBe,KAgBNC,EAhBM,OAiBGpT,IAAMC,SAAS,GAjBlB,mBAiBfoT,EAjBe,KAiBTC,EAjBS,OAkBStT,IAAMC,SAAS,IAlBxB,mBAkBfuI,EAlBe,KA2CtB,OA3CsB,KAoBtByC,qBAAU,WACNzI,EAAQmC,GAAQiB,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAChCF,MAAK,SAACC,GACHJ,QAAQC,IAAI,WAAWG,GACpBA,EAAIE,SACHmN,EAAQrN,EAAIL,KAAKyN,MACjBpE,GAAOc,GAAGhL,EAAO,eAAc,SAAC9E,GAC5B4F,QAAQC,IAAI,gBAAgB7F,GACzBA,EAAKmT,QAAUA,IACdE,EAAQrT,EAAKoT,MACbG,EAAYvT,EAAKsT,eAIzB1N,QAAQC,IAAI,QAAQG,EAAI0C,QAE7BpC,OAAM,SAACC,GACNX,QAAQC,IAAI,QAAQU,QAE1B,CAAC,IAKC,yBAAKhG,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAE3I,cAAc,SAAUiT,YAAY,QAASnI,aAAa,GAAGoE,QAAQ,KACxG,yBAAKpP,MAAO,CAACC,QAAQ,SAEb,kBAAC4G,EAAA,EAAD,CAAY7G,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAGT,SAAS,KAAxD,eAIA,kBAACjI,EAAA,EAAD,CACIH,MAAO,CAACoT,SAAS,IAAI5M,OAAO,IAC5BgH,QAAM,EACN9M,MAASqS,EACTxS,SAAU,SAACC,GAASwS,EAAYxS,EAAMC,OAAOC,OAAQ+N,GAAOoC,KAAK,OAAO,CAACgC,KAAKA,EAAKE,SAASvS,EAAMC,OAAOC,MAAM0E,KAAKb,KACpHlE,MAAM,WACNC,QAAQ,YA7CV,CAAC,OAAO,MAAM,aAAa,SAAS,QAAQ,OAAO,aAAa,OA+CnDuM,KAAI,SAACC,EAAKC,GAAN,OACX,kBAACW,GAAA,EAAD,CAAUhN,MAAOqM,EAAOsG,IAAKtG,GACxBD,OAOjB,kBAAC5L,EAAA,EAAD,CAAYC,QAAS,WACjBkE,QAAQC,IAAI,QAAQ2N,GAEhBC,EADO,GAARD,EACU,EAEA,IAIbjT,MAAO,CAACwG,OAAO,KACdyM,EACG,kBAACK,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,QAGZ,yBAAKvT,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAErC,OAAO,KAC1C,kBAAC,KAAD,CACAxG,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAEjC,MAAM,OAAOD,OAAO,QACtD6M,YAAY,iBACZC,KA1EG,CAAC,OAAO,QAAQ,aAAa,SAAS,QAAQ,OAAO,aAAa,OA0EzDV,GACZE,MA1EG,CAAC,SAAS,WA0ECA,GACd1S,SAAU,SAACG,GACPoS,EAAQpS,GACR+N,GAAOoC,KAAK,OAAO,CAACgC,KAAKnS,EAAMqS,SAASA,EAAS3N,KAAKb,EAAOqO,OAAOA,KAExExK,SAAUA,EACVsL,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBlT,MAAOmS,EACPgB,WAAY,CACZC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,QCjHVC,OAdf,SAAoB5U,GAAO,IAChBqN,EAASrN,EAATqN,MACP,OACI,yBAAK5M,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAG3I,cAAc,WAClD,kBAAC2G,EAAA,EAAD,CAAYvG,QAAQ,MACfsM,GAEL,kBAACrB,GAAA,EAAD,CACIjL,QAAQ,gBACR0P,KAAM,O,kDCZhBoE,GAAa,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,MAAM,MAAM,OCcxF,SAASC,GAAK9U,GAAO,IAgBb+U,EAfGC,EAAQhV,EAARgV,KAEHC,EAAY,UAEbD,EAAKE,cACJD,EAAY,WAYZF,GAVDxR,EAASa,iBACC4Q,EAAK3B,QAAU9P,EAASa,iBAAiBwK,MAC7CoG,EAAKE,aAQK,OAEE,EApBL,MAwBO7U,IAAMC,SAAS,IAxBtB,mBAwBT6U,EAxBS,KAwBJC,EAxBI,KAyBhB9J,qBAAU,WACH0J,EAAKE,cAGRpP,QAAQC,IAAI,OAAOiP,GAEnBlN,EAAekN,EAAK3B,QAAQpN,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC5CF,MAAK,SAACC,GACAA,EAAIE,SACHgP,EAAQlP,EAAIqL,mBAItB,CAAC,IASH,OACI,yBAAK9Q,MAAO,CAACC,QAAQ,OAAO8K,SAAS,OAAOvE,OAAO,GAAGM,WAAWwN,IAC7D,kBAACjG,GAAA,EAAD,CAAM/N,QAAQ,YAAYN,MAAO,CAAC4U,gBAAgBJ,IAC9C,yBAAKxU,MAAO,CAACC,QAAQ,OAAQC,cAAc,WACvC,yBAAKF,MAAO,CAACwG,OAAO,KACf+N,EAAKE,YACF,kBAAC5N,EAAA,EAAD,CAAY7G,MAAO,CAACoI,SAAS,KAA7B,aAIA,kBAACvB,EAAA,EAAD,CAAY7G,MAAO,CAACoI,SAAS,KACxBsM,EAAK5I,OAKlB,kBAACjF,EAAA,EAAD,CAAY7G,MAAO,CAAC8G,WAAW,GAAGyG,YAAY,KACzCgH,EAAKnI,SAGTmI,EAAKM,MACF,kBAAC3T,EAAA,EAAD,CAAYC,QA5BV,WAClB8I,GAAasK,EAAKM,OACjBrP,MAAK,SAACsF,GACHoF,OAAOvI,KAAKmD,EAAI,eA0BA,kBAACgK,GAAA,EAAD,OAGJ,8BAGJ,kBAACjO,EAAA,EAAD,CAAY7G,MAAO,CAACC,QAAQ,OAAOuG,OAAO,GAAI4B,SAAS,KDpFlD,SAAC2M,GACtB,IAAIC,EAAO,IAAIC,KAAKF,GAEhBG,EAAOF,EAAKG,WAAW,EACvBC,GAAUJ,EAAKK,aAAa,GAAG,GAEnC,OADcL,EAAKM,UAAY,IAAMlB,GAAWY,EAAKO,YAAc,IAAMP,EAAKQ,cAAgB,MAAON,EAAK,IAAIE,ECgFzFK,CAAUlB,EAAKmB,eASxC,SAASC,GAAYpW,GAAO,IAMpBqT,EALGrO,EAAsBhF,EAAtBgF,OAAOkQ,EAAelV,EAAfkV,YADS,EAEA7U,IAAMC,SAAS,IAFf,mBAEhBiO,EAFgB,KAEX8H,EAFW,OAGEhW,IAAMC,SAAS,IAHjB,mBAGhBgV,EAHgB,KAGVgB,EAHU,OAIQjW,IAAMC,UAAS,GAJvB,mBAIhBiW,EAJgB,KAIPC,EAJO,KASnBnD,EADD6B,EACUrQ,EAAcU,iBAEdhC,EAASa,iBAAiBwK,IAyCvC,OALAtD,qBAAU,cAER,CAAC,IAIC,yBAAK7K,MAAO,CAACC,QAAQ,OAAQC,cAAc,WACvC,yBAAKF,MAAO,CAACC,QAAQ,OAAOuG,OAAO,KACnC,kBAACrG,EAAA,EAAD,CACIO,MAAOoN,EACPzN,MAAM,eACNL,MAAO,CAACC,QAAQ,OAAQ4I,SAAS,EAAE0E,YAAY,IAC/ChN,SAAU,SAACC,GAASoV,EAAQpV,EAAMC,OAAOC,QACzCJ,QAAQ,aACZ,kBAACiB,EAAA,EAAD,CAAQJ,QA/CK,WACjB,IAAMoT,EAAO,CACTnP,KAAKb,EACL6H,QAAQ0B,EACR+G,MAAMA,EACNJ,YAAYA,EACZ7B,OAAOA,GAGXvN,QAAQC,IAAI,OAAOiP,GAEnB9F,GAAOoC,KAAK,eAAe0D,GAC3BqB,EAAQ,KAmC6BtV,QAAQ,YAAYkB,MAAO,UAAUxB,MAAO,CAACC,QAAQ,OAAO8K,SAAS,QAClGiL,QAAS,kBAACC,GAAA,EAAD,OADb,SAOA,yBAAKjW,MAAO,CAACC,QAAQ,OAAQuG,OAAO,KAChC,kBAAC0P,GAAA,EAAD,MACA,kBAAChL,GAAA,EAAD,CAAOpK,KAAK,OAAOP,SAzCV,SAACC,GAClBuV,GAAY,GACZ,IAAMlM,EAAOrJ,EAAMC,OAAO4K,MAAM,GAC1BvB,EAAO,aAAavF,GAAO,IAAI0Q,MAAOkB,UAC5CvM,GAAWC,EAAKC,GACftE,MAAK,SAAC8F,GACHyK,GAAY,GACZF,EAAS/L,SAmCJgM,EAAS,kBAACvK,GAAA,EAAD,MAAoB,8BAC7BsJ,EACD,kBAAC3T,EAAA,EAAD,CAAYC,QA/BG,WACvB0U,EAAS,MA+BG,kBAACO,GAAA,EAAD,OAEH,gCAuDFjR,oBA/Cf,SAAoB5F,GAAO,IAChBgF,EAA8BhF,EAA9BgF,OAAOkQ,EAAuBlV,EAAvBkV,YAAYhN,EAAWlI,EAAXkI,QADJ,EAEC7H,IAAMC,SAAS,IAFhB,mBAEjBwW,EAFiB,KAEXC,EAFW,KAqBtB,OAjBAzL,qBAAU,YCzLU,SAACtG,GAMrB,OAAOS,MAAMpC,EAAcC,SALJ,CACnBoC,OAAO,MACPC,QAAQ,CAAE,KAAOX,EAAQ,eAAgB,uBDuLzC1B,CAAS0B,GAAQiB,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACjCF,MAAK,SAACC,GACHJ,QAAQC,IAAI,gBAAgBG,GACzBA,EAAIE,UACH0Q,EAAQ5Q,EAAI4Q,MACZC,EAASD,OAIjB5H,GAAOc,GAAG,aAAahL,GAAO,SAAC9E,GAC3B,IAAI8W,EAAWF,EAAMG,OAAO/W,GAC5B4W,EAAQE,EACRD,EAASC,QAEf,CAAC,IAGC,yBAAKvW,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAASsG,OAAO,EAAG4I,QAAQ,GAAI+D,YAAY,QAASnI,aAAa,KACvG,yBAAKhL,MAAO,CAACC,QAAQ,SACjB,yBAAKD,MAAO,CAACC,QAAQ,OAAO4I,SAAS,IACjC,kBAAChC,EAAA,EAAD,CAAYvG,QAAQ,MAApB,gBAKJ,kBAACY,EAAA,EAAD,CAAYC,QAAS,kBAAIsG,MACrB,kBAACgP,GAAA,EAAD,QAGR,yBAAKzW,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAAS2I,SAAS,EAAElC,OAAO,EAAG+P,UAAU,SAAUC,gBAAgB,gBACvGN,EAAMxJ,KAAI,SAACC,EAAKC,GAAN,OACP,kBAACsH,GAAD,CAAME,KAAQzH,QAItB,yBAAK9M,MAAO,CAACC,QAAQ,SACjB,kBAAC0V,GAAD,CAAapR,OAASA,EAAQkQ,YAAeA,S,kDEpN7D,SAASmC,GAAoBrX,GAAO,IACzBgF,EAAgChF,EAAhCgF,OAAOsS,EAAyBtX,EAAzBsX,cADiB,GACQtX,EAAXuX,OACSlX,IAAMC,SAAS,KAFrB,mBAExBiR,EAFwB,KAEZiG,EAFY,OAGRnX,IAAMC,UAAS,GAHP,mBAGxBmX,EAHwB,KAGnBC,EAHmB,KAK3BC,GAAS,EA4Bb,OA3BG9S,EAAcE,kBACb4S,GAAS,EACJL,GAAiB/T,EAASa,iBAAiBwK,MAChD+I,GAAS,GAGbrM,qBAAU,WACNxD,EAAewP,GAAerR,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC9CF,MAAK,SAACC,GACAA,EAAIE,UACHN,QAAQC,IAAI,cAAcG,GAC1BsR,EAAetR,EAAIqL,iBAI3BrC,GAAOc,GAAG,sBAAsBhL,GAAO,SAAC9E,GACjCA,EAAKqR,aAAe+F,IAChBpX,EAAK0X,OACJF,GAAQ,GAERA,GAAQ,SAKtB,CAAC,IAGC,kBAACG,GAAA,EAAD,CAAKC,YAAY,WACXH,EAqBE,8BApBA,kBAAC7I,GAAA,EAAD,CAAMrO,MAAO,CAACwG,OAAO,IAAKlG,QAAQ,YACjC0W,EACD,6BACI,yBAAKvQ,IAAO6Q,KAAQtX,MAAO,CAAC2G,OAAO,GAAGC,MAAM,MADhD,WAIA,6BACI,yBAAKH,IAAO8Q,KAASvX,MAAO,CAAC2G,OAAO,GAAGC,MAAM,MADjD,YAGA,kBAACC,EAAA,EAAD,CAAY7G,MAAO,CAACwG,OAAO,KACtBsK,EAAYhF,MAGjB,kBAACjF,EAAA,EAAD,CAAY7G,MAAO,CAACwG,OAAO,KACtBsK,EAAYpR,SAcjC,SAAS8X,GAAcjY,GAAO,IACnBgF,EAAgChF,EAAhCgF,OAAOoD,EAAyBpI,EAAzBoI,KAAKF,EAAoBlI,EAApBkI,QAAQoH,EAAYtP,EAAZsP,SADF,EAEAjP,IAAMC,SAAS,IAFf,mBAElBH,EAFkB,KAEZqE,EAFY,OAGInE,IAAMC,UAAS,GAHnB,mBAGlB4S,EAHkB,KAGVgF,EAHU,OAIc7X,IAAMC,UAAS,GAJ7B,mBAIlBqM,EAJkB,KAILC,EAJK,OAKoBvM,IAAMC,SAAS,IALnC,mBAKlB6X,EALkB,KAKFC,EALE,KAwBzB,OACI,6BACI,kBAACjQ,EAAA,EAAD,CAAQC,KAAQA,GACZ,kBAACC,EAAA,EAAD,yCACA,kBAACC,EAAA,EAAD,KACI,kBAAC1H,EAAA,EAAD,CAAWE,MAAM,WAAWE,SAAU,SAACC,GAASuD,EAASvD,EAAMC,OAAOC,UACrE+R,EAAQ,wCAAa,6BAAK,kBAAClH,GAAA,EAAD,OAA0B,+BAEzD,kBAAClD,EAAA,EAAD,KACI,kBAAC9G,EAAA,EAAD,CAAQJ,QA1BF,WAClBsN,GAAOoC,KAAK,sBAAsB,CAACzL,KAAKb,EAAO7E,MAAMA,IACrD+X,GAAW,GACXhJ,GAAOc,GAAG,6BAA6BhL,GAAO,SAAC9E,GACxCA,EAAKgG,IACJoJ,EAASpP,EAAKqR,YAAY3C,MAE1BwJ,EAAmBlY,EAAK0I,KACxBgE,GAAgB,IAGpB1E,IACAgQ,GAAW,QAcH,WAGA,kBAAClW,EAAA,EAAD,CAAQJ,QAAU,WAAKsG,MAAvB,YAMR,kBAAC+D,GAAA,EAAD,CAAU7D,KAAQuE,EAAczE,QAAU,kBAAI0E,GAAgB,IAAQC,QAASsL,KA+D5EE,OA1Df,SAA2BrY,GAAO,IACvBgF,EAA8BhF,EAA9BgF,OAAOkQ,EAAuBlV,EAAvBkV,YAAYhN,EAAWlI,EAAXkI,QADG,EAES7H,IAAMC,SAAS,IAFxB,mBAExBgY,EAFwB,KAEXC,EAFW,OAGRlY,IAAMC,SAAS,IAHP,mBAGnBkY,GAHmB,aAIoBnY,IAAMC,UAAS,GAJnC,mBAItBmY,EAJsB,KAIJC,EAJI,KAwB7B,OAlBApN,qBAAU,WACNzI,EAAQmC,GAAQiB,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAChCF,MAAK,SAACC,GACAA,EAAIE,UACHoS,EAAQtS,EAAIL,MACZ0S,EAAiBrS,EAAIL,KAAKyS,cAE1BxS,QAAQC,IAAI,OAAOG,EAAIL,YAKjC,CAAC,IAQC,yBAAKpF,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAAS2I,SAAS,EAAEsK,YAAY,QAASnI,aAAa,GAAGoE,QAAQ,KACvG,yBAAKpP,MAAO,CAACC,QAAQ,SAEjB,kBAAC4G,EAAA,EAAD,CAAY7G,MAAO,CAACC,QAAQ,OAAQ4I,SAAS,GAAIvI,QAAQ,MAAzD,sBAKA,kBAACY,EAAA,EAAD,CAAYC,QAAS,WAAKsG,MACtB,kBAACgP,GAAA,EAAD,QAGR,6BACKhC,EAAY,8BAAQ,kBAAClT,EAAA,EAAD,CAAQC,MAAM,UAAUlB,QAAQ,YAAYa,QAnBjD,WACxB8W,GAAqB,KAkBQ,mBAKrB,yBAAKjY,MAAO,CAACC,QAAQ,SAChB4X,EAAahL,KAAI,SAACC,EAAKC,GAAN,OACd,6BACI,kBAAC6J,GAAD,CAAqBrS,OAAUA,EAAQsS,cAAe/J,SAKlE,kBAAC0K,GAAD,CAAejT,OAAUA,EAAQoD,KAAMqQ,EAAmBvQ,QAAS,WAAKwQ,GAAqB,IAASpJ,SAAY,SAACiC,GAAegH,EAAiB,GAAD,oBAAKD,GAAL,CAAkB/G,W,8BC7JpL,SAASoH,GAAU3Y,GAAO,IACf4Y,EAAkB5Y,EAAlB4Y,cAEP,OACI,kBAAC9J,GAAA,EAAD,KACI,kBAACnN,EAAA,EAAD,CAAYC,QAAS,WAAKgX,EAAc,KACpC,kBAAC,KAAD,OAEJ,kBAACjX,EAAA,EAAD,CAAYC,QAAW,kBAAIgX,EAAc,KACrC,kBAACC,GAAA,EAAD,OAEJ,kBAAClX,EAAA,EAAD,CAAYC,QAAW,kBAAIgX,EAAc,KACrC,kBAACE,GAAA,EAAD,OAEJ,kBAAC9W,EAAA,EAAD,CAAQJ,QAAW,kBAAIgX,EAAc,KAArC,eAsHGhT,oBA9Gf,SAAuB5F,GAAO,IACnB+H,EAAMgR,cAANhR,GACD/C,EAAS+C,EAERzB,EAAWtG,EAAXsG,QAJkB,EAMUjG,IAAMC,UAAS,GANzB,mBAMlB0Y,EANkB,KAMPC,EANO,OAOc5Y,IAAMC,UAAS,GAP7B,mBAOlB4Y,EAPkB,KAOLC,EAPK,KAsCzB,OAtBA7N,qBAAU,WACN4D,GAAOc,GAAG,0BAA0BhL,GAAO,SAAC9E,GACxCoG,EAAQC,KAAK,aAIjB,IAAM6S,EAAWC,aAAY,WAAKnK,GAAOoC,KAAK,mBAAmB,CAACzL,KAAKkC,EAAG6P,QAAO,MAAQ,KASzF,OALAjH,OAAO2I,iBAAiB,gBAAgB,SAACC,GACrCrK,GAAOoC,KAAK,mBAAmB,CAACzL,KAAKkC,EAAG6P,QAAO,IAC/C4B,cAAcJ,MAGX,WACHI,cAAcJ,GACdlK,GAAOoC,KAAK,mBAAmB,CAACzL,KAAKkC,EAAG6P,QAAO,QAMnD,yBAAKnX,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAE3I,cAAc,UAAWyI,UAAU,QACtE,yBAAK3I,MAAO,CAACC,QAAQ,OAAQsG,eAAe,WACxC,yBAAKvG,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAGkC,SAAS,SAC7C,kBAAClE,EAAA,EAAD,CAAYvG,QAAQ,MAApB,kBAIA,yBAAKN,MAAO,CAACC,QAAQ,OAAQsG,eAAe,SAASsC,SAAS,IAC1D,yBAAK7I,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAApC,aAGA,yBAAK5I,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAC/BrE,GAGL,kBAAChD,EAAA,EAAD,CAAQJ,QAAS,WACbiR,UAAUC,UAAUC,UAAU/N,KAC9B,kBAACgO,GAAA,EAAD,SAKZ,yBAAKvS,MAAO,CAACwG,OAAO,KAChB,kBAAC0R,GAAD,CAAWC,cACP,SAACa,GACa,GAAPA,EACCR,GAAc,GACF,GAAPQ,EACLN,GAAgB,GACJ,GAAPM,GACLvK,GAAOoC,KAAK,mBAAmB,CAACzL,KAAKkC,EAAG6P,QAAO,IAC/CtR,EAAQC,KAAK,WACD,GAAPkT,IA7D7B5U,EAAcW,iBACdxF,EAAMsG,QAAQC,KAAK,UAEnB2I,GAAOoC,KAAK,mBAAmB,CAACzL,KAAKkC,EAAG6P,QAAO,UAkE3C,yBAAKnX,MAAO,CAACC,QAAQ,OAAO4I,SAAS,IACjC,yBAAK7I,MAAO,CAACC,QAAQ,OAAQ4I,SAAS,EAAE3I,cAAc,WAElD,yBAAKF,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAErC,OAAO,KAC1C,kBAAC,GAAD,CAAYjC,OAAUA,KAIzBkU,EACD,yBAAKzY,MAAO,CAACC,QAAQ,OAAQmP,QAAQ,EAAE5I,OAAO,IAC1C,kBAAC,GAAD,CAAmBjC,OAAUA,EAAQkQ,aAAe,EAAMhN,QAAW,WAAKiR,GAAgB,OAE7F,+BAIL,yBAAK1Y,MAAO,CAACC,QAAQ,SAChBsY,EACG,kBAAC,GAAD,CAAYhU,OAAUA,EAAQkQ,aAAe,EAAMhN,QAAS,WAAK+Q,GAAc,MAC/E,oC,UCnHxB,SAASS,GAAa1Z,GAAO,IAClB2Z,EAAY3Z,EAAZ2Z,SAEP,OACI,6BACKA,EACD,yBAAKlZ,MAAO,CAACC,QAAQ,SACjB,yBAAKwG,IAAM6Q,KAAQtX,MAAO,CAAC2G,OAAO,GAAGC,MAAM,MAC3C,kBAACC,EAAA,EAAD,6BAMJ,yBAAK7G,MAAO,CAACC,QAAQ,SACjB,yBAAKwG,IAAM8Q,KAASvX,MAAO,CAAC2G,OAAO,GAAGC,MAAM,MAC5C,kBAACC,EAAA,EAAD,+BAQhB,SAASqR,GAAU3Y,GAAO,IACf4Y,EAAqC5Y,EAArC4Y,cAAc3T,EAAuBjF,EAAvBiF,YAAY2S,EAAW5X,EAAX4X,OADZ,EAEMvX,IAAMC,SAAS,MAFrB,mBAEdkP,EAFc,KAEPoK,EAFO,OAGiBvZ,IAAMC,SAAS,IAHhC,mBAGduZ,EAHc,KAGG5H,EAHH,KAmBrB,OACI,kBAACnD,GAAA,EAAD,KACK8I,EACG,kBAACjW,EAAA,EAAD,CAAYC,QAAW,SAACX,GAAS2Y,EAAU3Y,EAAM6P,eAhBzDgB,GAAoB7M,GAAagB,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACjDF,MAAK,SAACC,GACH,GAAGA,EAAIE,QAAQ,CAGX,IAFA,IAAI4L,EAAU,GAEd,MAAyB8H,OAAOC,QAAQ7T,EAAImM,UAAUL,SAAtD,eAA+D,CAAC,IAAD,sBAApD8B,EAAoD,KAAhD3S,EAAgD,KAC3D6Q,EAAQzL,KAAK,CAACuN,EAAI3S,IAEtB8Q,EAAWD,SASP,kBAACgI,GAAA,EAAD,OAGJ,8BAGJ,kBAACrY,EAAA,EAAD,CAAYC,QAAS,WAAKgX,EAAc,KACpC,kBAAC,KAAD,OAEJ,kBAACjX,EAAA,EAAD,CAAYC,QAAW,kBAAIgX,EAAc,KACrC,kBAACC,GAAA,EAAD,OAEJ,kBAAClX,EAAA,EAAD,CAAYC,QAAW,kBAAIgX,EAAc,KACrC,kBAACE,GAAA,EAAD,OAEJ,kBAAC9W,EAAA,EAAD,CAAQJ,QAAW,kBAAIgX,EAAc,KAArC,cAIA,kBAACnJ,GAAA,EAAD,CAAMrH,KAAOoJ,QAAQhC,GAASM,SAAUN,EAAQtH,QAAS,WAAK0R,EAAU,QACpE,yBAAKnZ,MAAO,CAACwG,OAAO,KACf4S,EAAiBvM,KAAI,SAACC,EAAKC,GAAN,OAClB,6BACKD,EAAK,GADV,QACmBA,EAAK,UAShD,IAAM0M,GAAkBrU,aAAW,SAAS5F,GAAO,IACxCgF,EAA8ChF,EAA9CgF,OAAOkV,EAAuCla,EAAvCka,gBAAgB5T,EAAuBtG,EAAvBsG,QAAQrB,EAAejF,EAAfiF,YADQ,EAGX5E,IAAMC,UAAS,GAHJ,mBAGvC0Y,EAHuC,KAG5BC,EAH4B,OAIP5Y,IAAMC,UAAS,GAJR,mBAIvC4Y,EAJuC,KAI1BC,EAJ0B,KAMxCgB,EAAkB,Y3BzDK,SAACnV,GAC9B,IAAMgB,EAAiB,CACnBN,OAAO,OACPC,QAAQ,CAAE,MAASpC,EAASgB,WAAW,KAAOS,EAAO,eAAgB,qBAGzE,OAAOS,MAAMhD,EAAcO,kBAAmBgD,I2BoD1ChD,CAAkBgC,GAAQiB,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC1CF,MAAK,SAACC,GACAA,EAAIE,SACHE,EAAQC,KAAK,aAIrB2I,GAAOoC,KAAK,qBAAsB,CAACzL,KAAKb,EAAO4S,QAAO,EAAMrG,YAAYhO,EAASa,iBAAiBwK,OAItG,OACI,yBAAKnO,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAE3I,cAAc,UAAWyI,UAAU,QACtE,yBAAK3I,MAAO,CAACC,QAAQ,OAAQsG,eAAe,WACxC,yBAAKvG,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAGkC,SAAS,SAC7C,kBAAClE,EAAA,EAAD,CAAYvG,QAAQ,MAApB,oBAIA,yBAAKN,MAAO,CAACC,QAAQ,OAAQsG,eAAe,SAASsC,SAAS,IAC1D,yBAAK7I,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAApC,aAGA,yBAAK5I,MAAO,CAACoI,SAAS,GAAIQ,UAAU,WAC/BrE,GAGL,kBAAChD,EAAA,EAAD,CAAQJ,QAAS,WACbiR,UAAUC,UAAUC,UAAU/N,KAC9B,kBAACgO,GAAA,EAAD,SAKZ,yBAAKvS,MAAO,CAACC,QAAQ,OAAOuG,OAAO,KAC/B,kBAACyS,GAAD,CAAcC,SAAYO,KAI9B,yBAAKzZ,MAAO,CAACwG,OAAO,KAChB,kBAAC,GAAD,CAAW2R,cACP,SAACa,GACa,GAAPA,EACCR,GAAc,GACF,GAAPQ,EACLN,GAAgB,GACJ,GAAPM,GACLvK,GAAOoC,KAAK,qBAAsB,CAACzL,KAAKb,EAAO4S,QAAO,EAAMrG,YAAYhO,EAASa,iBAAiBwK,MAClGtI,EAAQC,KAAK,WACD,GAAPkT,GACLU,KAIZvC,OAAUsC,EACVjV,YAAcA,MAItB,yBAAKxE,MAAO,CAACC,QAAQ,OAAO4I,SAAS,IACjC,yBAAK7I,MAAO,CAACC,QAAQ,OAAQ4I,SAAS,EAAE3I,cAAc,WAElD,yBAAKF,MAAO,CAACC,QAAQ,OAAO4I,SAAS,EAAErC,OAAO,KAC1C,kBAAC,GAAD,CAAYjC,OAAUA,KAIzBkU,EACD,yBAAKzY,MAAO,CAACC,QAAQ,OAAOmP,QAAQ,EAAE5I,OAAO,IACzC,kBAAC,GAAD,CAAmBjC,OAAUA,EAAQkQ,aAAe,EAAOhN,QAAW,WAAKiR,GAAgB,OAE9F,yBAAK1Y,MAAO,CAACC,QAAQ,WAI1B,yBAAKD,MAAO,CAACC,QAAQ,SAChBsY,EACG,kBAAC,GAAD,CAAYhU,OAAUA,EAAQkQ,aAAe,EAAOhN,QAAS,WAAK+Q,GAAc,MAChF,oCAYxB,SAASmB,GAAoBpa,GAAO,IACzBqa,EAAqCra,EAArCqa,UAAU/K,EAA2BtP,EAA3BsP,SAAS+C,EAAkBrS,EAAlBqS,UAAUjK,EAAQpI,EAARoI,KADL,EAEU/H,IAAMC,SAAS,IAFzB,mBAEVga,GAFU,WAc/B,OAVAhP,qBAAU,WACNwG,GAAoBO,GAAWpM,MAAK,SAACC,GAAD,OAAQA,EAAIC,UAC/CF,MAAK,SAACC,GACAA,EAAIqU,QACHD,EAAiBpU,EAAImM,gBAG/B,CAAC,IAIC,6BACI,kBAAClK,EAAA,EAAD,CAAQC,KAAMA,GACd,kBAACC,EAAA,EAAD,+DAAqEgK,EAArE,KACI,kBAACvJ,EAAA,EAAD,KACI,kBAAC9G,EAAA,EAAD,CAAQJ,QAAS0N,GAAjB,UAIA,kBAACtN,EAAA,EAAD,CAAQJ,QAASyY,GAAjB,cAwFLzU,oBA/Ef,SAAyB5F,GAAO,IAErB+H,EAAMgR,cAANhR,GAFoB,EAGW1H,IAAMC,UAAS,GAH1B,mBAGpBka,EAHoB,KAGPC,EAHO,OAIwBpa,IAAMC,SAAS,IAJvC,mBAIpBoa,EAJoB,KAIDC,EAJC,OAKgBta,IAAMC,UAAS,GAL/B,mBAKpBsa,EALoB,KAKLC,EALK,OAMmBxa,IAAMC,UAAS,GANlC,mBAMpB4Z,EANoB,KAMHY,EANG,KAsE3B,OAlDAxP,qBAAU,Y3BnOkB,SAACtG,GAC7B,IAAMgB,EAAiB,CACnBN,OAAO,MACPC,QAAQ,CAAC,MAAQpC,EAASgB,WAAW,QAAUS,EAAO,eAAgB,qBAG1E,OAAOS,MAAMhD,EAAcG,iBAAiBoD,I2B8NxCpD,CAAiBmF,GAAI9B,MAAK,SAACC,GAAD,OAAQA,EAAIC,UACrCF,MAAK,SAACC,GACHJ,QAAQC,IAAI,WAAWG,GACpBA,EAAIE,SACAF,EAAI6U,OACHN,GAAe,GAKnBza,EAAMsG,QAAQC,KAAK,aAI3B2I,GAAOc,GAAG,QAAQjI,GAAG,SAAC7H,GACgBA,EAA3B2F,KADmB,IACbwM,EAAqBnS,EAArBmS,UAAUa,EAAWhT,EAAXgT,QACvBpN,QAAQC,IAAI,mBAAmB7F,GAE3B2a,IADD3H,GAMHyH,EAAsBtI,MAG1BnD,GAAOc,GAAG,oBAAoBjI,GAAG,SAAC7H,GAC3BA,EAAK0X,OACJkD,GAAmB,GAEnBA,GAAmB,MAK3B,IAAM1B,EAAWC,aAAY,WAAKnK,GAAOoC,KAAK,qBAAsB,CAACzL,KAAKkC,EAAG6P,QAAO,EAAKrG,YAAYhO,EAASa,iBAAiBwK,QAAQ,KAQvI,OALA+B,OAAO2I,iBAAiB,gBAAgB,SAACC,GACrCrK,GAAOoC,KAAK,qBAAsB,CAACzL,KAAKkC,EAAG6P,QAAO,EAAMrG,YAAYhO,EAASa,iBAAiBwK,MAC9F4K,cAAcJ,MAGX,WACHlK,GAAOoC,KAAK,qBAAsB,CAACzL,KAAKkC,EAAG6P,QAAO,EAAMrG,YAAYhO,EAASa,iBAAiBwK,MAC9F4K,cAAcJ,MAEpB,IAGE,yBAAKhQ,UAAU,QACVoR,EAAY,kBAACP,GAAD,CAAiBC,gBAAmBA,EAAiBjV,YAAeyV,EAAoB1V,OAAU+C,IAAM,kBAAC,GAAD,CAAYsF,MAAM,6BAEvI,kBAAC+M,GAAD,CAAqBhS,KAAQwS,EAAgBtL,SAjEvB,WAC1BJ,GAAOoC,KAAK,SAAU,CAACzL,KAAKkC,EAAIsK,UAAUqI,EAAoBxU,KAAI,IAClE2U,GAAkB,GAClBC,GAAmB,IA8D+DT,UA3DvD,WAC3BnL,GAAOoC,KAAK,SAAU,CAACzL,KAAKkC,EAAIsK,UAAUqI,EAAoBxU,KAAI,IAClE2U,GAAkB,IAyDqGxI,UAAaqI,QC7P7HM,OAxBf,SAAchb,GAAO,IAAD,EAE0BK,IAAMC,SAAS,GAFzC,mBAQhB,OARgB,UAIhBgL,qBAAU,cAER,CAAC,IAGC,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOf,KAAK,aAAY,kBAAC,GAAD,OACxB,kBAAC,IAAD,CAAOA,KAAO,yBAAwB,kBAAC,GAAD,OACtC,kBAAC,IAAD,CAAOA,KAAO,uBAAsB,kBAAC,GAAD,OACpC,kBAAC,IAAD,CAAOA,KAAO,gBAAe,kBAAC,GAAD,OAC7B,kBAAC,IAAD,CAAOA,KAAK,aAAY,kBAAC,GAAD,OACxB,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,GAAD,WC7BrB0Q,OARf,WACE,OACE,kBAACC,EAAA,EAAD,CAAexH,MAAOtU,GAChB,kBAAC,GAAD,QCCUoS,QACW,cAA7Bb,OAAOwK,SAASC,UAEe,UAA7BzK,OAAOwK,SAASC,UAEhBzK,OAAOwK,SAASC,SAASC,MACvB,2DCZNC,IAASzU,OACP,kBAAC,IAAM0U,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmB5I,WACrBA,UAAU6I,cAAcC,MACrB1V,MAAK,SAAA2V,GACJA,EAAaC,gBAEdrV,OAAM,SAAAsV,GACLhW,QAAQgW,MAAMA,EAAMjP,a,wCEzI5B3N,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.7fc63d26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google.1b943d72.png\";","module.exports = __webpack_public_path__ + \"static/media/user.a48aca27.png\";","module.exports = __webpack_public_path__ + \"static/media/coding.4b817883.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {createMuiTheme} from '@material-ui/core'\r\nimport {teal,indigo} from '@material-ui/core/colors'\r\n\r\nconst appTheme = createMuiTheme({\r\n    palette:{\r\n        primary:indigo,\r\n        secondary:teal\r\n    },\r\n    typography:{\r\n        fontFamily:\"'Roboto-Medium','Roboto-Black'\"\r\n    }\r\n})  \r\n\r\nexport {appTheme};","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyDXXNwj9yIB_o0FpGd3txLeBBvU_MfnhZM\",\r\n    authDomain: \"codeview-b41a7.firebaseapp.com\",\r\n    databaseURL: \"https://codeview-b41a7.firebaseio.com\",\r\n    projectId: \"codeview-b41a7\",\r\n    storageBucket: \"codeview-b41a7.appspot.com\",\r\n    messagingSenderId: \"41880489918\",\r\n    appId: \"1:41880489918:web:79e07ec87d00fe420673ef\",\r\n    measurementId: \"G-91HW2VKV8V\"\r\n  };\r\n\r\nexport const googleConfig = {\r\n    clientId: '41880489918-ff5sebqstbkdjru2po7gmgsepqhnuio7.apps.googleusercontent.com', \r\n    clientSecret: \"-1JWDbVE3ytYo5_qpXwPYHje\",\r\n    apiKey:'AIzaSyDOy1JRRQfHO7TD-vbFuHqxcw4PQiXaUOc',\r\n    redirectUris:[\"http://localhost:3000/\"],\r\n    scope: \"https://www.googleapis.com/auth/calendar\",\r\n    discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n  };\r\n\r\nexport const backend = {\r\n  baseUrl:\"https://code-view.herokuapp.com/api\",\r\n  websocketEndPoint: \"https://code-view.herokuapp.com\",\r\n\r\n  //baseUrl:\"http://localhost:8000/api\",\r\n  //websocketEndPoint: \"http://localhost:8000\"\r\n}","import React from 'react'\r\n\r\nimport { FormControl, TextField,InputLabel, OutlinedInput,InputAdornment,IconButton,Button } from '@material-ui/core'\r\nimport {Visibility,VisibilityOff} from '@material-ui/icons'\r\n\r\nfunction InterviewerLogin(props){\r\n    const onSubmit = props.onSubmit;\r\n    var data = {\r\n        email:\"\",\r\n        password:\"\",\r\n    }\r\n    \r\n\r\n    const [showPassword,setShowPassword] = React.useState(false);\r\n    return (\r\n        <div style={{\r\n            display:\"flex\",\r\n            flexDirection:\"column\"\r\n        }}>\r\n            <TextField\r\n                style={{marginTop:10}}\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                onChange={(event)=>{data.email = event.target.value}}/>\r\n            <FormControl variant=\"outlined\" style={{marginTop:10}}>\r\n                <InputLabel>Password</InputLabel>\r\n                <OutlinedInput\r\n                    type={showPassword? 'text' : 'password'}\r\n                    onChange={(event)=>{data.password = event.target.value}}\r\n                    endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            onClick={()=>setShowPassword(!showPassword)}\r\n                            edge=\"end\"\r\n                        >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                    }\r\n                />\r\n        </FormControl>\r\n        <Button style={{marginTop:10}} onClick={()=>onSubmit(data)} variant=\"contained\" color=\"primary\">\r\n                    Login\r\n                </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterviewerLogin;","import {backend} from '../../config'\r\nconst BASE_URL = backend.baseUrl;\r\n\r\nexport const signInEndpoints = {\r\n    googleSignIn:BASE_URL+\"/signin/interviewer/google\",\r\n    emailSignIn:BASE_URL+\"/signin/interviewer/email\",\r\n}\r\n\r\nexport const interviewerEndPoints = {\r\n    getOwnProfile:BASE_URL+\"/interviewer/profile\",\r\n    getOthersProfile:BASE_URL+\"/interviewer/profile/others\", \r\n    updateProfile:BASE_URL+\"/interviewer/update\",\r\n}\r\n\r\nexport const roomEndPoints = {\r\n    createRoom:BASE_URL+\"/room/create\",\r\n    checkRoom :BASE_URL+\"/room/check\",\r\n    checkInterviewer: BASE_URL+\"/room/check/interviewer\",\r\n    getRoom :BASE_URL+\"/room/get\",\r\n    getRoomsByInterviewer:BASE_URL+\"/room/get/interviewer\",\r\n    addInterviewer: BASE_URL+\"/room/add/interviewer\",\r\n    removeInterviewer: BASE_URL+\"/room/remove/interviewer\",\r\n}\r\n\r\nexport const candidateEndPoints = {\r\n    getCandidate:BASE_URL+\"/candidate/profile\",\r\n    createCandidate:BASE_URL+\"/candidate/create\",\r\n    updateCandidate:BASE_URL+\"/candidate/update\"\r\n}\r\n\r\nexport const chatEndPoints = {\r\n    getChats:BASE_URL+\"/chat/chats/room\",\r\n}","export const UserData = function(){\r\n    var data = {\r\n        userExists:false,\r\n        tokenExists:false,\r\n        idToken:\"\",\r\n        email:\"\",\r\n        profile:{},\r\n    }\r\n\r\n    data.idToken = localStorage.getItem('token');\r\n    data.profile = JSON.parse(localStorage.getItem('profile'));\r\n    data.email = localStorage.getItem('email');\r\n\r\n    if(data.profile){\r\n        data.userExists = true;\r\n    }\r\n    if(data.idToken){\r\n        data.tokenExists = true;\r\n    }\r\n\r\n    function setProfileData(newProfile){\r\n        data.profile = newProfile;\r\n        localStorage.setItem('profile',JSON.stringify(newProfile));\r\n        data.userExists = true;\r\n    }\r\n    function getProfileData(){\r\n        return data.profile;\r\n    }\r\n\r\n    function setToken(newToken){\r\n        data.idToken = newToken;\r\n        localStorage.setItem('token',newToken);\r\n        data.tokenExists = true;\r\n    }\r\n    function getToken(){\r\n        return data.idToken;\r\n    }\r\n\r\n    function setEmail(newEmail){\r\n        data.email = newEmail;\r\n        localStorage.setItem('email',newEmail);\r\n    }\r\n    function getEmail(){\r\n        return data.email;\r\n    }\r\n\r\n    function userExists(){\r\n        return data.userExists;\r\n    }\r\n    function tokenExists(){\r\n        return data.tokenExists;\r\n    }\r\n\r\n    function clearUser(){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('profile');\r\n        localStorage.removeItem('email');\r\n        data.tokenExists = false;\r\n        data.userExists = false;\r\n    }\r\n\r\n    return {setProfileData,getProfileData,setToken,getToken,setEmail,getEmail,userExists,tokenExists,clearUser};\r\n\r\n}();\r\n\r\nexport const CandidateData = function(){\r\n    var data = {\r\n        roomExists:false,\r\n        candidateExists:false,\r\n        roomId:\"\",\r\n        candidateId:\"\",\r\n    }\r\n    data.roomId = localStorage.getItem('roomId');\r\n    data.candidateId = localStorage.getItem('candidateId');\r\n\r\n    if(data.roomId){\r\n        data.roomExists = true\r\n    }\r\n    if(data.candidateId){\r\n        data.candidateExists = true;\r\n    }\r\n\r\n    function setRoomId(newRoomId){\r\n        data.roomId = newRoomId;\r\n        localStorage.setItem('roomId',newRoomId);\r\n        data.roomExists = true;\r\n    }\r\n    function getRoomId(){\r\n        return data.roomId;\r\n    }\r\n\r\n    function setCandidateId(newCandidateId){\r\n        data.candidateId = newCandidateId;\r\n        localStorage.setItem('candidateId',newCandidateId);\r\n        data.candidateExists = true;\r\n    }\r\n    function getCandidateId(){\r\n        return data.candidateId;\r\n    }\r\n\r\n    function candidateExists(){\r\n        return data.candidateExists\r\n    }\r\n    function roomExists(){\r\n        return data.roomExists;\r\n    }\r\n\r\n    function clearCandidate(){\r\n        localStorage.removeItem('roomId');\r\n        localStorage.removeItem('candidateId');\r\n        data.candidateExists = false;\r\n        data.roomExists = false;\r\n    }\r\n\r\n    return {setRoomId,getRoomId, setCandidateId, getCandidateId, candidateExists, roomExists,clearCandidate};\r\n\r\n}();\r\n\r\n\r\n","import {roomEndPoints} from '../endpoints'\r\nimport {UserData} from '../../localStorage'\r\n\r\nexport const createRoom = (data)=>{\r\n    console.log(\"Data\",JSON.stringify(data));\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{ \"token\": UserData.getToken(),'Content-Type': 'application/json',},\r\n        body: JSON.stringify(data)\r\n    }\r\n\r\n    return fetch(roomEndPoints.createRoom, requestOptions);\r\n\r\n}\r\n\r\nexport const checkRoom = (data)=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{\"room\":data.room,\"password\":data.password,'Content-Type': 'application/json',},\r\n    }\r\n\r\n    return fetch(roomEndPoints.checkRoom, requestOptions);\r\n}\r\n\r\nexport const checkInterviewer = (roomId)=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{\"token\":UserData.getToken(),\"room_id\":roomId,'Content-Type': 'application/json',},\r\n    }\r\n\r\n    return fetch(roomEndPoints.checkInterviewer,requestOptions);\r\n}\r\n\r\nexport const getRoom =(roomId)=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{\"id\":roomId,'Content-Type': 'application/json',},\r\n    }\r\n\r\n    return fetch(roomEndPoints.getRoom,requestOptions);\r\n}\r\n\r\nexport const addInterviewer = (roomId) =>{\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{ \"token\": UserData.getToken(),\"room\":roomId,'Content-Type': 'application/json',},\r\n    }\r\n\r\n    return fetch(roomEndPoints.addInterviewer, requestOptions);\r\n}\r\n\r\nexport const removeInterviewer = (roomId)=>{\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{ \"token\": UserData.getToken(),\"room\":roomId,'Content-Type': 'application/json',},\r\n    }\r\n\r\n    return fetch(roomEndPoints.removeInterviewer, requestOptions);\r\n}\r\n\r\nexport const getRoomsByInterviewer = ()=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{\"token\":UserData.getToken(),'Content-Type': 'application/json',},\r\n    }\r\n\r\n    return fetch(roomEndPoints.getRoomsByInterviewer,requestOptions)\r\n}","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { FormControl, TextField,InputLabel, OutlinedInput,InputAdornment,IconButton,Button } from '@material-ui/core'\r\nimport {Visibility,VisibilityOff} from '@material-ui/icons'\r\n\r\nimport {checkRoom} from '../../utils/api/controllers/roomCtrl'\r\nimport {CandidateData} from '../../utils/localStorage'\r\n\r\nfunction JoinRoomForm(props){\r\n    const onSubmit = props.onSubmit;\r\n    var data = {\r\n        room:\"\",\r\n        password:\"\",\r\n    }\r\n\r\n    const handleSubmit = ()=>{\r\n        console.log(\"Data\",data);\r\n        checkRoom(data).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            console.log(\"Response\",res);\r\n            if(res.success){\r\n                if(res.verified){\r\n                    CandidateData.setRoomId(data.room);\r\n                    props.history.push('/joinRoom');\r\n                }else{\r\n\r\n                }\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n        })\r\n    }\r\n    \r\n\r\n    const [showPassword,setShowPassword] = React.useState(false);\r\n    return (\r\n        <div style={{\r\n            display:\"flex\",\r\n            flexDirection:\"column\"\r\n        }}>\r\n            <TextField\r\n                style={{marginTop:10}}\r\n                label=\"Room Id\"\r\n                variant=\"outlined\"\r\n                onChange={(event)=>{data.room = event.target.value}}/>\r\n            <FormControl variant=\"outlined\" style={{marginTop:10}}>\r\n                <InputLabel>Password</InputLabel>\r\n                <OutlinedInput\r\n                    type={showPassword? 'text' : 'password'}\r\n                    onChange={(event)=>{data.password = event.target.value}}\r\n                    endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            onClick={()=>setShowPassword(!showPassword)}\r\n                            edge=\"end\"\r\n                        >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        <Button style={{marginTop:10}} onClick={handleSubmit} variant=\"contained\" color=\"secondary\">\r\n                    Join Room\r\n                </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(JoinRoomForm);","import React from 'react'\r\nimport {ButtonBase,Typography} from '@material-ui/core'\r\n\r\nimport GoogleLogo from '../../res/icons/google.png'\r\nimport {GoogleLogin} from 'react-google-login'\r\n\r\nimport {googleConfig} from '../../config'\r\n\r\n\r\nfunction GoogleLoginButton(props){\r\n    const onSuccess = props.onSuccess;\r\n    const onFailure = props.onFailure;\r\n\r\n    return(\r\n        <div>\r\n            <GoogleLogin\r\n                render={(renderProps)=>(\r\n                    <ButtonBase onClick={renderProps.onClick}>\r\n                        <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"center\", margin:20, }}>\r\n                            <img src = {GoogleLogo} style={{height:20, width:20}}/>\r\n                            <Typography style={{marginLeft:10}}>\r\n                                SignIn with Google\r\n                            </Typography>\r\n                        </div>\r\n                    </ButtonBase>\r\n                )}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                clientId={googleConfig.clientId}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default GoogleLoginButton;","import React from 'react'\r\n\r\nimport {Redirect} from 'react-router-dom'\r\nimport {UserData,CandidateData} from '../../utils/localStorage'\r\n\r\nfunction RedirectRoute(props){\r\n\r\n    if(UserData.userExists()){\r\n        return(\r\n            <Redirect to=\"/interviewer\"/>\r\n        )\r\n    }else if(UserData.tokenExists()){\r\n        return(\r\n            <Redirect to=\"/register\"/>\r\n        )\r\n    }else if(CandidateData.roomExists()){\r\n        return(\r\n            <Redirect to=\"/joinRoom\"/>\r\n        )\r\n    }else{\r\n        return(\r\n            <Redirect to=\"/\"/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RedirectRoute;","import {interviewerEndPoints} from '../endpoints'\r\nimport {UserData} from '../../localStorage'\r\n\r\nexport const updateProfile = (data)=>{\r\n    console.log(\"Data\",JSON.stringify(data));\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{ \"token\": UserData.getToken(),'Content-Type': 'application/json',},\r\n        body: JSON.stringify(data)\r\n    }\r\n\r\n    return fetch(interviewerEndPoints.updateProfile, requestOptions);\r\n\r\n}\r\n\r\nexport const getProfile = ()=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{ \"token\": UserData.getToken(),'Content-Type': 'application/json'},\r\n    }\r\n\r\n    return fetch(interviewerEndPoints.getOwnProfile, requestOptions);\r\n}\r\n\r\nexport const getProfileById = (id)=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{ \"id\": id,'Content-Type': 'application/json'},\r\n    }\r\n    return fetch(interviewerEndPoints.getOthersProfile, requestOptions);\r\n}","import React from 'react'\r\n\r\nimport {Button,Dialog, DialogContent, DialogTitle,DialogActions, ButtonBase} from '@material-ui/core'\r\nimport './style.css';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport IntervierLogin from '../molecules/InterViewerLogin';\r\nimport JoinRoomForm from '../molecules/JoinRoomForm';\r\nimport GoogleLoginButton from '../atoms/GoogleLoginButton';\r\n\r\nimport AuthRedirect from '../atoms/RedirectRoute';\r\n\r\nimport {googleSignIn} from '../../utils/api/controllers/signInCtrl'\r\nimport {getProfile} from '../../utils/api/controllers/interviewerCtrl'\r\nimport {checkRoom} from '../../utils/api/controllers/roomCtrl'\r\n\r\nimport {UserData} from '../../utils/localStorage';\r\n\r\nconst InterviewerDialog = withRouter((props)=>{\r\n    const isOpen = props.isOpen;\r\n    const onClose = props.onClose;\r\n\r\n    const googleLoginSuccess = (response)=>{\r\n        var profile = response.profileObj\r\n        console.log(\"Login\");\r\n        googleSignIn(response).then((res)=>(res.json()))\r\n        .then((data)=>{\r\n            console.log(\"login successfull\");\r\n            //Saving data in \r\n            //Getting Success.\r\n            if(data.success){\r\n                UserData.setToken(data.jwt);\r\n                //setting email\r\n                UserData.setEmail(profile.email);\r\n                if(data.newUser){\r\n                    props.history.push('/register');\r\n                }else{\r\n                    console.log(UserData.getToken());\r\n                    getProfile().then((res)=>(res.json()))\r\n                    .then((res)=>{\r\n                        if(res.success){\r\n                            UserData.setProfileData(res.profile);\r\n                            props.history.push('/interviewer');\r\n                        }else{\r\n                            console.log(res.msg);\r\n                        }\r\n                        \r\n                    })\r\n                }\r\n            }else{\r\n                console.log(data.msg);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n        })\r\n    }\r\n    return(\r\n        <Dialog open={isOpen} onClose = {onClose}>\r\n            <DialogTitle>Sign In As An Interviewer</DialogTitle>\r\n            <DialogContent style={{margin:20}}>\r\n                <div>\r\n                    <IntervierLogin onSubmit ={(data)=>{\r\n\r\n                    }} />\r\n                </div>\r\n            </DialogContent>\r\n            <div style={{margin:\"auto\"}}>\r\n                <GoogleLoginButton onSuccess= {googleLoginSuccess} onFailure = {(response)=>{console.log(\"Error\",response)}}/>\r\n            </div>\r\n            <div style={{margin:\"auto\"}} >\r\n                <ButtonBase onClick={()=>{}} >\r\n                    <div style={{margin:20, fontFamily:\"Roboto-Black\", fontSize:20}}>\r\n                        Are you a new user?\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n            <DialogActions>\r\n                <Button onClick={onClose}>\r\n                    Cancle\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        \r\n    )\r\n});\r\n\r\nconst CandidateDialog = withRouter((props)=>{\r\n    const isOpen = props.isOpen;\r\n    const onClose = props.onClose;\r\n    return(\r\n        <Dialog open={isOpen} onClose={onClose} style={{margin:20}}>\r\n            <DialogTitle>Please enter the details</DialogTitle>\r\n            <DialogContent style={{margin:20}}>\r\n                    <div>\r\n                        <JoinRoomForm/>\r\n                    </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose}>\r\n                    Cancle\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        )\r\n})\r\n\r\nfunction LoginScreen(props){\r\n    const [interviewerDialog,setInterviewDialog] = React.useState(false);\r\n    const [candidateDialog,setCandidateDialog] = React.useState(false);\r\n\r\n    return(\r\n    <div className=\"body\">\r\n        <AuthRedirect/>\r\n        <div style={{\r\n            fontSize:50,\r\n            fontFamily:\"Roboto-Black\",\r\n            textAlign:\"center\"\r\n        }}>\r\n            Welcome! to CodeView\r\n        </div><br/>\r\n\r\n        <div style={{\r\n            textAlign:\"center\"\r\n        }}>\r\n            Best online solution for taking coding interviews.\r\n        </div>\r\n\r\n        <div style={{\r\n            flexGrow:1,\r\n            flexDirection:\"row\",\r\n            alignContent:\"center\",\r\n            margin:\"auto\",\r\n            marginTop:40\r\n        }}>\r\n            <Button color=\"primary\" variant=\"contained\" style={{\r\n                margin:20\r\n            }} onClick={()=>setInterviewDialog(true)}>\r\n                Sign in as interviewer\r\n            </Button>\r\n            <Button color=\"secondary\" variant=\"contained\" style={{\r\n                margin:20\r\n            }} onClick={()=> setCandidateDialog(true)}>\r\n                Join interview room\r\n            </Button>\r\n        </div>\r\n        \r\n        <InterviewerDialog isOpen = {interviewerDialog} onClose = {()=> setInterviewDialog(false)}/>\r\n        <CandidateDialog isOpen = {candidateDialog} onClose = {()=> setCandidateDialog(false)}/>\r\n        \r\n    </div>)\r\n}\r\n\r\nexport default withRouter(LoginScreen);","import {signInEndpoints} from '../endpoints'\r\n\r\nconst googleSignIn= (response)=>{\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{ 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ idToken: response.tokenId })\r\n    }\r\n\r\n    return fetch(signInEndpoints.googleSignIn,requestOptions);\r\n}\r\n\r\nexport {googleSignIn}; ","import firebase from 'firebase'\r\nimport {firebaseConfig}from '../../config';\r\nimport {UserData} from '../localStorage'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storageRef = firebase.storage().ref();\r\n\r\n\r\nexport const uploadFile = (file,path)=>{\r\n    const fileRef = storageRef.child(path);\r\n    return fileRef.put(file);\r\n}\r\n\r\nexport const downloadFile = (path)=>{\r\n    const fileRef = storageRef.child(path);\r\n    return fileRef.getDownloadURL();\r\n}","import React, { useEffect } from 'react'\r\n\r\nimport { Button, TextField, Input,CircularProgress, Snackbar} from '@material-ui/core'\r\nimport {uploadFile,downloadFile} from '../../utils/firebase/storage';\r\nimport {UserData} from '../../utils/localStorage'\r\n\r\nimport AvatarIcon from '../../res/icons/user.png'\r\n\r\nfunction ImageUploader(props){\r\n    const {onUpload,uploadState,path} = props;\r\n\r\n    const [uploading,setUploading] = React.useState(false);\r\n    const [image,setImage] = React.useState(AvatarIcon);\r\n    const [snackbarStatus, setSnackbarStatus] = React.useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(path == \"\"){\r\n            return ;\r\n        }\r\n        downloadFile(path).then((url)=>{\r\n            console.log(\"URL\",url);\r\n            setImage(url);\r\n        })\r\n\r\n    },[1])\r\n\r\n\r\n    const handleImageSelect = (event)=>{\r\n        setImage(URL.createObjectURL(event.target.files[0]));\r\n        const file = event.target.files[0];\r\n        setUploading(true);\r\n        const path = \"profile/\"+UserData.getEmail()+\"/profileImage.jpg\";\r\n        uploadFile(file,path)\r\n        .then((snapshot)=>{\r\n            setUploading(false);\r\n            console.log(\"Upload Successfull!\");\r\n            onUpload(path);\r\n            \r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"flex\", flexDirection:\"row\", flexWrap:\"wrap\"}}>\r\n            <div>\r\n                <img src = {image} style={{height:140,width:140, borderRadius:70, outlineColor:\"#000000\",}}/> \r\n            </div>\r\n            <div style={{display:\"flex\",alignContent:\"center\", flexWrap:\"wrap\", marginLeft:40}}>\r\n                <Input type=\"file\" onChange={handleImageSelect}/>\r\n                {uploading? <CircularProgress/>:<div/> }\r\n            </div>\r\n\r\n            <Snackbar open={snackbarStatus} autoHideDuration={6000} onClose={()=>{setSnackbarStatus(false)}}>\r\n                Upload Successfull\r\n            </Snackbar>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RegistrationForm(props){\r\n    var {onSubmit,data} = props;\r\n\r\n    const [imageUploading, setImageUploading] = React.useState(false);    \r\n\r\n    return(\r\n        <div style={{display:\"flex\", flexDirection:\"column\", flexWrap:\"wrap\"}}>\r\n\r\n            <ImageUploader path={data.photo} onUpload={(path)=>{data.photo= path}} uploadState={imageUploading}/>\r\n    \r\n            <TextField\r\n                style={{marginTop:20}}\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                defaultValue={data.name}\r\n                onChange={(event)=>{data.name = event.target.value}}/>\r\n            <TextField\r\n                style={{marginTop:20}}\r\n                variant=\"outlined\"\r\n                label=\"Phone\"\r\n                defaultValue={data.phone}\r\n                onChange={(event)=>{data.phone = event.target.value}}/>\r\n            <TextField\r\n                style={{marginTop:20}}\r\n                variant=\"outlined\"\r\n                label=\"Company or Organisation\"\r\n                defaultValue={data.company}\r\n                onChange={(event)=>{data.company = event.target.value}}/>\r\n            <TextField\r\n                style={{marginTop:20}}\r\n                variant = \"outlined\"\r\n                label =\"Website\"\r\n                defaultValue = {data.website}\r\n                onChange = {(event)=>{data.website = event.target.value}}/>\r\n            <div style={{flexGrow:1}}>\r\n                <Button variant=\"contained\" color=\"primary\" style={{marginTop:30}} onClick={()=>{onSubmit()}}>\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react'\r\nimport './style.css'\r\n\r\nimport RegistrationForm from '../../components/molecules/RegistrationForm'\r\n\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {updateProfile,getProfile, getProfileById} from '../../utils/api/controllers/interviewerCtrl'\r\nimport {UserData} from '../../utils/localStorage'\r\n\r\nimport AuthRedirect from '../atoms/RedirectRoute'\r\nimport { Snackbar } from '@material-ui/core'\r\n\r\nfunction RegisterScreen(props){\r\n\r\n    const [showSnackBar, setShowSnackBar] = React.useState(false);\r\n    const [message,setMessage] = React.useState(\"\");\r\n\r\n    var data = {\r\n        name:\"\",\r\n        phone:\"\",\r\n        company:\"\",\r\n        website:\"\",\r\n        photo:\"\",\r\n    }\r\n\r\n    const validateData = ()=>{\r\n        if(data.name == \"\"){\r\n            setMessage(\"Please enter a name!\");\r\n            return false;\r\n        }else if(data.phone ==\"\"){\r\n            setMessage(\"Please enter a phone number!\")\r\n            return false;\r\n        }else if(data.company == \"\"){\r\n            setMessage(\"Please enter a company!\");\r\n            return false;\r\n        }else if(data.website == \"\"){\r\n            setMessage(\"Please enter a website!\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = ()=>{\r\n        if(!validateData()){\r\n            setShowSnackBar(true);\r\n            return false;\r\n        }\r\n\r\n        //updating the profile\r\n        console.log(\"Token\",UserData.getToken());\r\n        updateProfile(data).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            return getProfile().then((res)=>(res.json()))\r\n        }).then((res)=>{\r\n            if(res.success){\r\n                console.log(\"Response\",res);\r\n                UserData.setProfileData(res.profile);\r\n                UserData.userExists(true);\r\n                props.history.push('/interviewer');\r\n            }else{\r\n                console.log(\"Error\",res.msg);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"root\" style={{flexWrap:\"wrap\"}}>\r\n            <AuthRedirect/>\r\n            <div style={{fontFamily:\"Roboto-Black\", fontSize:50, textAlign:\"center\"}}>\r\n                Please enter the details.\r\n            </div>\r\n            <div style={{display:\"flex\",flexDirection:\"column\" ,flexWrap:\"wrap\", margin:\"auto\", alignContent:\"center\", marginTop:40}}>\r\n                <RegistrationForm data = {data} onSubmit={handleSubmit}/>\r\n            </div>\r\n\r\n            <Snackbar open = {showSnackBar} message={message} onClose = {()=>{setShowSnackBar(false)}}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterScreen);","import { Button, Chip, MenuItem, TextField, Typography,FormControl,InputLabel,OutlinedInput, InputAdornment,IconButton} from '@material-ui/core';\r\nimport React from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport {Add,TextFields,FormatListNumbered, Visibility, VisibilityOff} from '@material-ui/icons'\r\n\r\nfunction CreateRoomForm(props){\r\n    const onSubmit = props.onSubmit;\r\n    const data = props.data;\r\n    const [fields, setFields] = React.useState([]);\r\n    const [fieldName, setFieldName] = React.useState(\"\");\r\n    const [fieldType,setFieldType] = React.useState(\"\");\r\n    const [showPassword,setShowPassword] = React.useState(false); \r\n    \r\n\r\n    return(\r\n        <div style={{display:\"flex\" , flexDirection:\"column\", flexWrap:\"wrap\"}}>\r\n            <Typography variant=\"h4\">\r\n                Please enter the details\r\n            </Typography>\r\n            <TextField \r\n                style={{margin:10,marginTop:30}}\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                onChange={(event)=>{data.title = event.target.value}}/>\r\n\r\n            \r\n\r\n            <div style={{display:\"flex\",flexWrap:\"wrap\", width:300, marginTop:30}}>\r\n                {fields.map((item,index)=>(\r\n                    <Chip\r\n                        style={{margin:10}}\r\n                        icon={item.type == \"number\"?<FormatListNumbered/>:<TextFields/>}\r\n                        label={item.name}\r\n                        color=\"secondary\"\r\n                        onDelete={()=>{fields.splice(index,1); setFields(fields);}}/>\r\n                ))}\r\n            </div>\r\n\r\n            <div style={{display:\"flex\", flexWrap:\"wrap\", flexDirection:\"column\",flexGrow:1, marginTop:20}}>\r\n                <Typography variant=\"h5\">\r\n                    Make Candidate Input Fields\r\n                </Typography>\r\n                <div style={{display:\"flex\", marginTop:10, marginBottom:10}}> \r\n                    <TextField\r\n                        style={{marginRight:10, width:150}}\r\n                        select\r\n                        onChange={(event)=>{setFieldType(event.target.value)}}\r\n                        variant=\"outlined\"\r\n                        label=\"Input Type\"\r\n                        helpderText=\"Please select number or text\">\r\n                            <MenuItem value=\"number\">\r\n                                Number\r\n                            </MenuItem>\r\n                            <MenuItem value=\"text\">\r\n                                Text\r\n                            </MenuItem>\r\n                    </TextField>\r\n                    <TextField\r\n                        style={{width:250}}\r\n                        label=\"Field Name\"\r\n                        variant = \"outlined\"\r\n                        style={{}}\r\n                        onChange={(event)=>{setFieldName(event.target.value)}}/>\r\n                </div>\r\n                \r\n                <div>\r\n                    <Button onClick={()=>{fields.push({name:fieldName,type:fieldType}); data.fields = fields; setFieldName(\"\"); setFieldType(\"\") ;}}  variant=\"contained\" color=\"primary\">\r\n                        <Add/> Add\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <FormControl variant=\"outlined\" style={{marginTop:30}}>\r\n                <InputLabel>Password</InputLabel>\r\n                <OutlinedInput\r\n                    type={showPassword? 'text' : 'password'}\r\n                    onChange={(event)=>{data.password = event.target.value}}\r\n                    endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                            onClick={()=>setShowPassword(!showPassword)}\r\n                            edge=\"end\"\r\n                        >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateRoomForm);","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {Fab} from '@material-ui/core'\r\n\r\nconst FloatingAction = withRouter((props)=>{\r\n    const Icon = props.icon;\r\n    const text = props.text;\r\n    const onClick = props.onClick;\r\n    return(\r\n        <Fab variant=\"extended\" color=\"secondary\"  style={{position:\"absolute\", bottom:30, right:30}}\r\n            onClick={onClick}\r\n        >\r\n            <Icon/>\r\n            {text}\r\n        </Fab>\r\n    )\r\n});\r\n\r\nexport default FloatingAction;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {Typography, Snackbar} from '@material-ui/core'\r\nimport {Done} from '@material-ui/icons'\r\n\r\nimport CreateRoomForm from '../../molecules/CreateRoomForm';\r\nimport FloatingAction from '../../atoms/FloatingAction';\r\n\r\nimport {createRoom} from '../../../utils/api/controllers/roomCtrl'\r\n\r\n\r\nfunction CreateRoomScreen(props){\r\n\r\n    const [showSnackBar,setShowSnackBar] = React.useState(false);\r\n\r\n    var data ={\r\n        title:\"\",\r\n        fields:{},\r\n        password:\"\",\r\n    }\r\n\r\n    const validate = () => {\r\n        if(data.title == \"\"){\r\n            return false;\r\n        }else if(data.fields == {}){\r\n            return false;\r\n        }else if(data.password == \"\"){\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleSubmit = ()=>{\r\n        if(!validate()){\r\n            setShowSnackBar(true);\r\n            return;\r\n        }\r\n        \r\n        createRoom(data).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n\r\n                console.log(\"Room Created!\", res.room);\r\n                props.history.push('../room/'+res.room._id);\r\n            }else{\r\n                console.log(\"Error\",res.msg);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"flex\",flexGrow:1, flexDirection:\"column\",alignContent:\"center\", margin:20}}  >\r\n\r\n            <Typography variant =\"h4\">\r\n                Create Room\r\n            </Typography>\r\n            \r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <CreateRoomForm data = {data}/>\r\n                \r\n            </div>\r\n            <FloatingAction icon = {Done} text=\"Create\" onClick={handleSubmit}/>\r\n\r\n            <Snackbar open = {showSnackBar} message=\"Please fill all the entries!\" onClose={()=>setShowSnackBar(false)}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CreateRoomScreen);","import React, { useEffect } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {Add} from '@material-ui/icons'\r\nimport {Card, Typography,Button} from '@material-ui/core';\r\n\r\nimport FloatingAction from '../../atoms/FloatingAction';\r\n\r\nimport {getRoomsByInterviewer} from '../../../utils/api/controllers/roomCtrl'\r\n\r\n\r\nconst ViewHolder = withRouter(function(props){\r\n    const {room,history} = props;\r\n\r\n    const handleEnterRoom=  ()=>{\r\n        history.push('./room/'+room._id);\r\n    }\r\n\r\n    return(\r\n        <Card>\r\n            <div style={{display:\"flex\",flexDirection:\"column\",margin:10}}>\r\n                <Typography style={{margin:10}}>\r\n                    Room Id = {room._id}\r\n                </Typography>\r\n                <Typography style={{magrin:10}} variant=\"h6 \">\r\n                    Title = {room.title}\r\n                </Typography>\r\n\r\n                <Button onClick={handleEnterRoom} style={{margin:10}} variant=\"contained\" color=\"primary\">\r\n                    Enter Room\r\n                </Button>\r\n            </div>\r\n        </Card>\r\n    )\r\n})\r\n\r\nfunction PastInterviews(props){\r\n\r\n    const [rooms,setRooms] = React.useState([]);\r\n\r\n    useEffect(()=>{\r\n        getRoomsByInterviewer().then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                setRooms(res.rooms);\r\n            }\r\n        })\r\n    },[1])\r\n\r\n    return(\r\n    \r\n        <div style={{margin:20}}>\r\n            <Typography variant =\"h4\">\r\n                Your Rooms\r\n            </Typography>\r\n\r\n            <div style={{display:\"flex\",margin:20}}>\r\n\r\n                {rooms.map((item,index)=>(\r\n                    <div style={{display:\"flex\",margin:10}}>\r\n                        <ViewHolder room = {item}/>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            \r\n            <FloatingAction icon={Add} text=\"Add Interview Room\" onClick={()=>{props.history.push('createRoom')}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(PastInterviews);","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {Snackbar} from '@material-ui/core'\r\n\r\nimport {updateProfile,getProfile} from '../../../utils/api/controllers/interviewerCtrl'\r\nimport {UserData} from '../../../utils/localStorage'\r\n\r\nimport RegistrationForm from '../../molecules/RegistrationForm'\r\n\r\nfunction Profile(props){\r\n    const {data,history} = props;\r\n\r\n    const [showSnackBar,setShowSnackBar] = React.useState(false);\r\n\r\n    const handleSubmit = (data)=>{\r\n        //updating the profile\r\n        console.log(\"Token\",UserData.getToken());\r\n        updateProfile(data).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            return getProfile().then((res)=>(res.json()))\r\n        }).then((res)=>{\r\n            if(res.success){\r\n                console.log(\"Response\",res);\r\n                UserData.setProfileData(res.profile);\r\n                UserData.userExists(true);\r\n\r\n                \r\n                setShowSnackBar(true);\r\n\r\n            }else{\r\n                console.log(\"Error\",res.msg);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{margin:20}}>\r\n            <Typography variant =\"h4\">\r\n                Profile\r\n            </Typography>\r\n            <div style={{display:\"flex\",flexDirection:\"column\" ,flexWrap:\"wrap\", margin:\"auto\", alignContent:\"center\", marginTop:40}}>\r\n                <RegistrationForm data = {data} onSubmit={handleSubmit}/>\r\n            </div>\r\n\r\n            <Snackbar open={showSnackBar} message=\"Profile updated Successfully!\" onClose={()=>{setShowSnackBar(false)}}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile);","import socketIOClient from 'socket.io-client'\r\nimport {backend} from '../config'\r\n\r\nexport const socket = socketIOClient(backend.websocketEndPoint);\r\nsocket.connect();\r\n\r\nsocket.on(\"connection\",()=>{\r\n    \r\n})","import React from 'react'\r\nimport {useEffect} from 'react'\r\nimport {withRouter, HashRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport {AppBar, Breadcrumbs, Button, Fab, IconButton, Toolbar, Typography, Link, Menu, MenuItem, Badge} from '@material-ui/core'\r\nimport {AccountBox,Language,Notifications,Add,Home, Create} from \"@material-ui/icons\"\r\nimport '../style.css'\r\n\r\nimport Avatar from '../../../res/icons/coding.png'\r\n\r\nimport CreateRoom from './CreateRoom';\r\nimport PastInterviews from './PastInterviews';\r\nimport Profile from './Profile';\r\n\r\nimport AuthRedirect from '../../atoms/RedirectRoute'\r\n\r\nimport {getProfile} from '../../../utils/api/controllers/interviewerCtrl'\r\n\r\nimport {UserData} from '../../../utils/localStorage'\r\nimport { socket } from '../../../utils/websocket'\r\nimport {addInterviewer} from '../../../utils/api/controllers/roomCtrl'\r\n\r\nimport {GoogleLogout} from 'react-google-login'\r\n\r\nimport {googleConfig} from '../../../config'\r\n\r\nfunction RequestMenu(props){\r\n    const {open,requests,onAccept,onReject, onClose,anchor} = props;\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Requests\",requests);\r\n    },[1])\r\n\r\n    return(\r\n        <div>\r\n            <Menu open = {open} anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                  \r\n                }} onClose={onClose}\r\n                style={{padding:20}}\r\n                anchorEl={anchor}>\r\n\r\n                <div style={{margin:20}}>\r\n                    <div>\r\n                        Room Requests\r\n                    </div>\r\n                    <div style={{display:\"flex\", flexDirection:\"column\", margin:20}}>\r\n                        {requests.map((item,index)=>(\r\n                            <div>\r\n                                Request by - {item.email} \r\n                                <br/>\r\n                                Room Id - {item.room}\r\n                                <br/>\r\n                                <Button onClick = {()=>{onAccept(item)}}>\r\n                                    Accept\r\n                                </Button>\r\n                                <Button onClick = {()=>onReject(item)}>\r\n                                    Reject\r\n                                </Button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </Menu>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst  Header = withRouter(function(props){\r\n    const {history} = props;\r\n    const [profile,setProfile] = React.useState({});\r\n    const [requests,setRequests] = React.useState([]);\r\n    const [requestMenu,setRequestMenu] = React.useState(null);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Id\",UserData.getProfileData());\r\n        socket.on(\"interviewer_wait/\"+UserData.getProfileData()._id, (data)=>{\r\n            console.log(\"Request\",data);\r\n            setRequests([...requests,data]);\r\n        })\r\n    },[1])\r\n\r\n    const handleRequestAccept = (request)=>{\r\n        socket.emit(\"interviewer_accept\",{room:request.room,interviewer:UserData.getProfileData()._id,res:true,});\r\n        \r\n        addInterviewer(request.room).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                //Joining the room\r\n                props.history.push('room/'+request.room);\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleRequestReject = (request)=>{\r\n        socket.emit(\"interviewer_accept\",{room:request.room,interviewer:UserData.getProfileData()._id,res:false,});\r\n    }\r\n\r\n    const handleLogout = ()=>{\r\n        UserData.clearUser();\r\n        history.push('../');\r\n    }\r\n\r\n\r\n    return(\r\n        <AppBar position=\"static\" style={{maxHeight:130}}>\r\n            <Toolbar style={{padding:10}}>\r\n                <div>\r\n                    <img src = {Avatar} style={{height:100, width:100, }} />\r\n                </div>\r\n                <Typography variant=\"h3\" style={{fontFamily:\"Roboto-Black\", flexGrow:1, margin:20,}} >\r\n                    {UserData.getProfileData().name}\r\n                </Typography>\r\n                <Typography variant=\"h6\" style={{fontFamily:\"Roboto-Black\", flexGrow:1, margin:20, color:\"#000000\"}} >\r\n                    {UserData.getProfileData().company}\r\n                </Typography>\r\n                \r\n                <div>\r\n                    <IconButton size=\"medium\" color=\"inherit\" onClick = {()=>{history.push('../')}} >\r\n                        <Home/>\r\n                    </IconButton>\r\n                    <IconButton size=\"medium\" color=\"inherit\" onClick = {()=>{\r\n                        window.open(UserData.getProfileData().website,'_blank');\r\n                    }}>\r\n                        <Language/>\r\n                    </IconButton>\r\n                    <IconButton size=\"medium\" color=\"inherit\" onClick={()=>{history.push('./profile')}}>\r\n                        <AccountBox/>\r\n                    </IconButton>\r\n                    <IconButton size=\"medium\" color=\"inherit\" onClick={(event)=>{setRequestMenu(event.currentTarget)}}>\r\n                        <Badge badgeContent={requests.length} color=\"secondary\">\r\n                            <Notifications/>\r\n                        </Badge>\r\n                    </IconButton>\r\n\r\n                    <GoogleLogout\r\n                            clientId={googleConfig.clientId}\r\n                            render={\r\n                                (renderProps)=>(\r\n                                    <Button color=\"inherit\" onClick={renderProps.onClick} disabled ={renderProps.disabled}>\r\n                                        Logout\r\n                                    </Button>\r\n                                )\r\n                            }\r\n                            onLogoutSuccess={handleLogout}\r\n                        >\r\n\r\n                        </GoogleLogout>\r\n\r\n                    \r\n\r\n                    <RequestMenu anchor ={requestMenu} onAccept={handleRequestAccept} onReject={handleRequestReject} requests={requests} open = {Boolean(requestMenu)} onClose= {()=>{setRequestMenu(null)}}/>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n})\r\n\r\nfunction HomeScreen(props){\r\n    const [bodyState,setBodyState] = React.useState('Home');  \r\n\r\n    \r\n    return(\r\n        <div className=\"root\">\r\n            <AuthRedirect/>\r\n            <HashRouter basename=\"/interviewer\" >\r\n                <Header/>   \r\n                <Switch>\r\n                    <Route exact path = \"/\" component = {(PastInterviews)}/>\r\n                    <Route path=\"/createRoom\" component={(CreateRoom)}/>\r\n                    <Route path=\"/profile\"><Profile data = {UserData.getProfileData()}/></Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(HomeScreen);","import {candidateEndPoints} from '../endpoints'\r\nimport {CandidateData} from '../../localStorage'\r\n\r\nexport const getProfile = ()=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{\"candidate\":CandidateData.getCandidateId(),Accept:\"application/json\"},\r\n    }\r\n\r\n    return fetch(candidateEndPoints.getCandidate, requestOptions);\r\n}\r\n\r\nexport const getCandidateProfile = (candidateId)=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{\"candidate\":candidateId,Accept:\"application/json\"},\r\n    }\r\n\r\n    return fetch(candidateEndPoints.getCandidate, requestOptions);\r\n}\r\n\r\nexport const createCandidite =(data)=>{\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{'Content-Type': 'application/json'},\r\n        body:JSON.stringify(data)\r\n    }\r\n\r\n    return fetch(candidateEndPoints.createCandidate, requestOptions);\r\n}\r\n\r\nexport const updateCandidate = (data)=>{\r\n    const requestOptions = {\r\n        method:\"POST\",\r\n        headers:{candidate:CandidateData.getCandidateId(),'Content-Type': 'application/json'},\r\n        body:JSON.stringify(data)\r\n    }\r\n\r\n    return fetch(candidateEndPoints.updateCandidate, requestOptions);\r\n}","import React from 'react'\r\nimport {useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport {TextField,Button, Snackbar} from '@material-ui/core'\r\nimport {FileCopy} from '@material-ui/icons'\r\n\r\nimport {CandidateData} from '../../utils/localStorage'\r\nimport {getProfile,createCandidite,updateCandidate} from'../../utils/api/controllers/candidateCtrl'\r\nimport {getRoom} from '../../utils/api/controllers/roomCtrl'\r\n\r\nfunction RoomDetailsForm(props){\r\n    const [fields,setFields] = React.useState([]);\r\n    const roomId = CandidateData.getRoomId();\r\n    const [details,setDetails] = React.useState({});\r\n    const [showSnackbar,setShowSnackbar] = React.useState(false);\r\n    const [showValidate,setShowValidate] = React.useState(false);\r\n    \r\n    var room;\r\n    \r\n    useEffect(()=>{\r\n        if(CandidateData.candidateExists()){\r\n            console.log(\"Candidate Detected!\");\r\n            console.log(\"CandidateId\", CandidateData.getCandidateId());\r\n            getProfile().then((res)=>(res.json()))\r\n            .then((res)=>{\r\n                console.log(res.candidate);\r\n                if(res.success){\r\n                    setDetails(res.candidate.details);\r\n                }else{\r\n                    \r\n                }\r\n            }).catch((err)=>{\r\n                console.log(\"Error\",err);\r\n    \r\n            })\r\n        }\r\n\r\n        //Get fields\r\n        getRoom(CandidateData.getRoomId()).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            console.log(\"Response\",res);\r\n            if(res.success){\r\n                room = res.room;\r\n                setFields(room.fields);\r\n                \r\n            }\r\n        })\r\n    },[1]);    \r\n\r\n    const handleFormSubmit = ()=>{\r\n        console.log(\"Data\",details);\r\n\r\n        if(CandidateData.candidateExists()){\r\n            updateCandidate(details).then((res)=>(res.json()))\r\n            .then((res)=>{\r\n                if(res.success){\r\n                    setShowSnackbar(true);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(\"Error\",err);\r\n            })\r\n        }else{\r\n            createCandidite(details).then((res)=>(res.json()))\r\n            .then((res)=>{\r\n                if(res.success){\r\n                    setShowSnackbar(true);\r\n                    console.log(\"Candidate created successfully\");\r\n                    console.log(\"Response\",res.candidate._id);\r\n                    CandidateData.setCandidateId(res.candidate._id);\r\n                }else{\r\n                    console.log(\"Error\",res.msg);\r\n                }\r\n            }).catch((err)=>{\r\n                console.log(\"Error\",err);\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"flex\", flexDirection:\"column\", flexWrap:\"wrap\", alignContent:\"center\"}}>\r\n            \r\n            <div style={{fontSize:30, textAlign:\"center\" }}>\r\n                Candidate Details\r\n            </div>\r\n            {fields.map((item,index)=>(\r\n                <TextField\r\n                    style={{marginTop:10}}\r\n                    label={item.name}\r\n                    variant=\"outlined\"\r\n                    defaultValue={details[item.name]}\r\n                    onChange={(event)=>{details[item.name] = event.target.value}}\r\n                    inputMode={item.type == \"number\"? \"decimal\":\"text\"}/>\r\n            ))}\r\n\r\n            <Button color=\"primary\" variant =\"contained\" style={{marginTop:10}} onClick={handleFormSubmit} anch>\r\n                Submit Details\r\n            </Button> \r\n\r\n            <Snackbar open = {showSnackbar} message = \"Details Submitted Successfully!\" autoHideDuration={3000} onClose={()=>{setShowSnackbar(false)}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                  }}/>  \r\n\r\n            <Snackbar open = {showValidate} message = \"Fill all the details!\" onClose={()=>showValidate(false)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RoomDetailsForm);","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {Fab,Button, Dialog,DialogTitle, DialogContent, CircularProgress,DialogActions, Snackbar} from '@material-ui/core'\r\nimport {FileCopy} from '@material-ui/icons'\r\n\r\nimport {CandidateData} from '../../../utils/localStorage'\r\n\r\nimport CandidateDetailsForm from '../../molecules/CandidateDetailsForm'\r\n\r\nimport AuthRedirect from '../../atoms/RedirectRoute'\r\n\r\nimport {socket} from '../../../utils/websocket'\r\n\r\nfunction WaitingDialog(props){\r\n    const {open,onCancle} =props;\r\n\r\n    return(\r\n        <div>\r\n            <Dialog open={open}>\r\n                <DialogTitle>Waiting for the interviewer to let you in</DialogTitle>\r\n                <DialogContent>\r\n                    <CircularProgress\r\n                        variant=\"indeterminate\"\r\n                        size={100}\r\n                        style={{margin:\"auto\"}}/>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCancle}>\r\n                        Cancle\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction JoinRoomScreen(props){\r\n    const roomId = CandidateData.getRoomId();\r\n    const [showWaitingDialog,setWaitingDialog] = React.useState(false); \r\n    const [showSnackBar,setShowSnackBar] = React.useState(false);\r\n    \r\n    \r\n\r\n    const handleJoinRoom = ()=>{\r\n        //Checking if candidate has submitted the details or not\r\n        if(!CandidateData.candidateExists()){\r\n            setShowSnackBar(true);\r\n            return false;\r\n        }\r\n        setWaitingDialog(true);\r\n        console.log(\"Room\",roomId);\r\n        socket.emit(\"request\",{room:roomId, candidate:CandidateData.getCandidateId(), waiting:true});\r\n\r\n        socket.on(\"waitResponse/\"+roomId,(data)=>{\r\n            console.log(\"Response\",data);\r\n            setWaitingDialog(false);\r\n            props.history.push(\"../candidate/room/\"+CandidateData.getRoomId());\r\n        })\r\n    }\r\n\r\n    const handleCancleJoinRoom = ()=>{\r\n        setWaitingDialog(false);\r\n\r\n        socket.emit(\"request\",{room:roomId, candidate:CandidateData.getCandidateId(),waiting:false});\r\n    }\r\n\r\n    const handleLeaveRoom = ()=>{\r\n        CandidateData.clearCandidate();\r\n        props.history.push('../');\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"flex\", justifyContent:\"center\", flexDirection:\"column\"}}>\r\n            <AuthRedirect/>\r\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                <div style={{fontSize:50, textAlign:\"center\" }}>\r\n                    Interview Title\r\n                </div>\r\n                <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                    <div style={{fontSize:20, textAlign:\"center\" }}>\r\n                        Room Id -  \r\n                    </div>\r\n                    <div style={{fontSize:20, textAlign:\"center\" }}>\r\n                        {CandidateData.getRoomId()}\r\n                    </div>\r\n\r\n                    <Button onClick={()=>{\r\n                        navigator.clipboard.writeText(CandidateData.getRoomId());}}>\r\n                        <FileCopy/>\r\n                    </Button>\r\n                </div>\r\n                \r\n            </div>\r\n            <div style={{display:\"flex\",flexDirection:\"column\", alignContent:\"center\"}}>\r\n                <CandidateDetailsForm  />\r\n            </div>\r\n\r\n            <Fab variant=\"extended\" color=\"secondary\"  style={{position:\"absolute\", bottom:30, right:30}}\r\n            onClick={handleJoinRoom}\r\n            >\r\n                Join Room\r\n            </Fab>\r\n            <Fab variant=\"extended\"  style={{position:\"absolute\", bottom:30, left:30}}\r\n            onClick={handleLeaveRoom}\r\n            >\r\n                Leave Room\r\n            </Fab>\r\n\r\n            <WaitingDialog open={showWaitingDialog} onCancle = {handleCancleJoinRoom}/>\r\n\r\n            <Snackbar message = \"Please enter the details!\" open = {showSnackBar} onClose={()=>setShowSnackBar(false)}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(JoinRoomScreen);","import React, { useEffect } from 'react'\r\n\r\nimport {socket} from '../../utils/websocket'\r\nimport {getRoom} from '../../utils/api/controllers/roomCtrl'\r\n\r\nimport {IconButton, MenuItem, Switch, TextField,Typography} from '@material-ui/core'\r\nimport {BrightnessHigh,Brightness4, Language} from '@material-ui/icons'\r\n\r\nimport {CandidateData,UserData} from '../../utils/localStorage'\r\n\r\nimport AceEditor from \"react-ace\";\r\n\r\n//Importing ace editor styles\r\nimport 'ace-builds/src-noconflict/mode-java'\r\nimport 'ace-builds/src-noconflict/mode-c_cpp'\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/mode-python'\r\nimport 'ace-builds/src-noconflict/mode-mysql'\r\nimport 'ace-builds/src-noconflict/mode-html'\r\nimport 'ace-builds/src-noconflict/mode-typescript'\r\nimport 'ace-builds/src-noconflict/mode-css'\r\n\r\nimport 'ace-builds/src-noconflict/theme-monokai'\r\nimport 'ace-builds/src-noconflict/theme-kuroir'\r\n\r\n\r\n\r\nfunction CodeEditor(props){\r\n    const {roomId} = props;\r\n    const [code,setCode] = React.useState(\"\");\r\n\r\n    var sender;\r\n\r\n    if(CandidateData.candidateExists()){\r\n        sender = CandidateData.getCandidateId();\r\n    }else{\r\n        sender = UserData.getProfileData()._id;\r\n    }\r\n\r\n    const languages = [\"Java\",\"C++\",\"JavaScript\",\"Python\",\"MySQL\",\"HTML\",\"TypeScript\",\"CSS\"];\r\n    const modes  = [\"java\",'c_cpp',\"javascript\",\"python\",\"mysql\",\"html\",\"typescript\",\"css\"];\r\n    const themes = [\"kuroir\",\"monokai\"];\r\n\r\n    const [language,setLanguage] = React.useState(0);\r\n    const [theme,setTheme] = React.useState(0);\r\n    const [fontSize,setFontSize] = React.useState(14);\r\n\r\n    useEffect(()=>{\r\n        getRoom(roomId).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            console.log(\"Response\",res);\r\n            if(res.success){\r\n                setCode(res.room.code);\r\n                socket.on(roomId+\"/updateCode\",(data)=>{\r\n                    console.log(\"Data Received\",data);\r\n                    if(data.sender != sender){\r\n                        setCode(data.code);\r\n                        setLanguage(data.language);\r\n                    }\r\n                })\r\n            }else{\r\n                console.log(\"Error\",res.msg);\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(\"Error\",err);\r\n        })\r\n    },[1])\r\n\r\n\r\n\r\n    return(\r\n        <div style={{display:\"flex\",flexGrow:1,flexDirection:\"column\", borderStyle:\"solid\", borderRadius:10,padding:10}}>\r\n            <div style={{display:\"flex\",}}>\r\n\r\n                    <Typography style={{display:\"flex\",flexGrow:1, fontSize:30}}>\r\n                        Code Editor\r\n                    </Typography>\r\n                    \r\n                    <TextField\r\n                        style={{minWidth:400,margin:10}}\r\n                        select\r\n                        value = {language}\r\n                        onChange={(event)=>{setLanguage(event.target.value); socket.emit('code',{code:code,language:event.target.value,room:roomId})}}\r\n                        label=\"Language\"\r\n                        variant=\"outlined\">\r\n\r\n                        {languages.map((item,index)=>(\r\n                            <MenuItem value={index} key={index}>\r\n                                {item}\r\n                            </MenuItem>\r\n                        ))}\r\n\r\n                    </TextField>\r\n                \r\n\r\n                <IconButton onClick={()=>{\r\n                    console.log(\"Theme\",theme);\r\n                    if(theme ==0){\r\n                        setTheme(1);\r\n                    }else{\r\n                        setTheme(0);\r\n                    }\r\n                \r\n                }}\r\n                    style={{margin:10}}>\r\n                    {theme?\r\n                        <BrightnessHigh/>:\r\n                        <Brightness4/>}\r\n                </IconButton>\r\n            </div>\r\n            <div style={{display:\"flex\",flexGrow:1,margin:10}}>\r\n                <AceEditor\r\n                style={{display:\"flex\",flexGrow:1,width:\"100%\",height:\"100%\"}}\r\n                placeholder=\"Type Code Here\"\r\n                mode={modes[language]}\r\n                theme={themes[theme]}\r\n                onChange={(value) => {\r\n                    setCode(value);\r\n                    socket.emit('code',{code:value,language:language,room:roomId,sender:sender});\r\n                }}\r\n                fontSize={fontSize} \r\n                showPrintMargin={false}\r\n                showGutter={true}\r\n                highlightActiveLine={false}\r\n                value={code}\r\n                setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: false,\r\n                showLineNumbers: true,\r\n                tabSize: 2,\r\n                }}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeEditor;","import { CircularProgress, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\nfunction LoadScreen(props){\r\n    const {title} = props;\r\n    return(\r\n        <div style={{display:\"flex\",flexGrow:1, flexDirection:\"column\"}}>\r\n            <Typography variant=\"h2\">\r\n                {title}\r\n            </Typography>\r\n            <CircularProgress\r\n                variant=\"indeterminate\"\r\n                size={50}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadScreen","const monthShort = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"June\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];\r\nconst dayShort = [\"Sun\",\"Mon\",\"Tues\",\"Wed\",\"Thur\",\"Fri\",\"Sat\"];\r\nconst dayLong = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n\r\n\r\nexport const parseDate = (dateISO)=>{\r\n    var date = new Date(dateISO);\r\n\r\n    var hour = date.getHours()+1;\r\n    var minute = (date.getMinutes()+1)%60;\r\n    var format =  date.getDate() + \" \" + monthShort[date.getMonth()] + \" \" + date.getFullYear() + \" / \"+ hour+\":\"+minute;\r\n    return format;\r\n} \r\n\r\nexport const dayAndTime = (dateISO)=>{\r\n    var date = new Date(dateISO);\r\n    var format = dayShort[date.getDay()]+\", \" + date.getHours();\r\n    return format;\r\n}\r\n\r\nexport const getPresent = (arg)=>{\r\n    const date = new Date();\r\n\r\n    if(arg == 'day'){\r\n        return date.getDay()\r\n    }if(arg == 'iso'){\r\n        return date.toISOString();\r\n    }\r\n}\r\n\r\nexport const getLongDays = ()=>{\r\n    return dayLong;\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Button, CircularProgress, Snackbar, TextField,Input, IconButton, Typography, Card } from '@material-ui/core'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {getChats} from '../../utils/api/controllers/chatCtrl'\r\nimport {uploadFile,downloadFile} from '../../utils/firebase/storage'\r\n\r\nimport {UserData,CandidateData} from '../../utils/localStorage'\r\nimport {socket} from '../../utils/websocket'\r\nimport { AttachFile, Close, CloudDownload, Delete, Send } from '@material-ui/icons'\r\n\r\nimport {getProfileById} from '../../utils/api/controllers/interviewerCtrl'\r\nimport {parseDate} from '../../utils/timeFormatter'\r\n\r\nfunction Chat(props){\r\n    const {chat} = props; \r\n    var isSelf;\r\n    var backColor = \"#c2cbff\";\r\n\r\n    if(chat.isCandidate){\r\n        backColor = \"#9effb8\"\r\n    }\r\n    if(UserData.getProfileData()){\r\n        isSelf = chat.sender == UserData.getProfileData()._id;\r\n    }else if(chat.isCandidate){\r\n        isSelf = true;\r\n    }else{\r\n        isSelf = false;\r\n    }\r\n\r\n    var chatMarginLeft ;\r\n    if(isSelf){\r\n        chatMarginLeft=\"auto\"\r\n    }else{\r\n        chatMarginLeft = 0;\r\n    }\r\n    \r\n\r\n    const [info,setInfo] = React.useState({});\r\n    useEffect(()=>{\r\n        if(chat.isCandidate){\r\n            return;\r\n        }\r\n        console.log(\"Chat\",chat);\r\n\r\n        getProfileById(chat.sender).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                setInfo(res.interviewer);\r\n            }\r\n        })\r\n\r\n    },[1])\r\n\r\n    const handleDownload= ()=>{\r\n        downloadFile(chat.media)\r\n        .then((url)=>{\r\n            window.open(url,\"_blank\");\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"flex\",flexWrap:\"wrap\",margin:10,marginLeft:chatMarginLeft}}>\r\n            <Card variant=\"contained\" style={{backgroundColor:backColor}} >\r\n                <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                    <div style={{margin:10}}>\r\n                        {chat.isCandidate?\r\n                            <Typography style={{fontSize:10}}>\r\n                                Candidate\r\n                            </Typography>\r\n                            :\r\n                            <Typography style={{fontSize:10}}>\r\n                                {info.name}\r\n                            </Typography>\r\n                        }\r\n                    </div>\r\n                    \r\n                    <Typography style={{marginLeft:10,marginRight:10}} >\r\n                        {chat.message} \r\n                    </Typography>\r\n\r\n                    {chat.media?\r\n                        <IconButton onClick={handleDownload}>\r\n                            <CloudDownload/>\r\n                        </IconButton>\r\n                        :\r\n                        <div/>\r\n                    }\r\n                    \r\n                    <Typography style={{display:\"flex\",margin:10, fontSize:10}}>\r\n                        {parseDate(chat.createdAt)}\r\n                    </Typography>\r\n\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SendMessage(props){\r\n    const {roomId,isCandidate} = props;\r\n    const [text,setText] = React.useState(\"\");\r\n    const [media,setMedia] = React.useState(\"\");\r\n    const [progress,setProgress] = React.useState(false); \r\n\r\n    var sender;\r\n\r\n    if(isCandidate){\r\n        sender = CandidateData.getCandidateId();\r\n    }else{\r\n        sender = UserData.getProfileData()._id;\r\n    }\r\n\r\n    const handleSubmit = ()=>{\r\n        const chat = {\r\n            room:roomId,\r\n            message:text,\r\n            media:media,\r\n            isCandidate:isCandidate,\r\n            sender:sender,\r\n        }\r\n\r\n        console.log(\"Chat\",chat);\r\n\r\n        socket.emit(\"chat_receive\",chat);\r\n        setText(\"\");\r\n    }\r\n\r\n    const handleAttach = (event)=>{\r\n        setProgress(true);\r\n        const file = event.target.files[0];\r\n        const path = \"room/chat/\"+roomId+new Date().getTime();\r\n        uploadFile(file,path)\r\n        .then((snapshot)=>{\r\n            setProgress(false);\r\n            setMedia(path);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const handleAttachRemove = ()=>{\r\n        setMedia(\"\");\r\n\r\n        //Removing the file\r\n    }\r\n    useEffect(()=>{\r\n        \r\n    },[1])\r\n\r\n\r\n    return(\r\n        <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n            <div style={{display:\"flex\",margin:10}}>\r\n            <TextField\r\n                value={text}\r\n                label=\"Type Message\"\r\n                style={{display:\"flex\", flexGrow:1,marginRight:10}}\r\n                onChange={(event)=>{setText(event.target.value)}}\r\n                variant=\"outlined\"/>\r\n            <Button onClick = {handleSubmit} variant=\"contained\" color =\"primary\" style={{display:\"flex\",flexWrap:\"wrap\"}}\r\n                endIcon={<Send/>}\r\n                >\r\n                Send\r\n            </Button>\r\n            </div>\r\n\r\n            <div style={{display:\"flex\", margin:10}}>\r\n                <AttachFile/>\r\n                <Input type=\"file\" onChange={handleAttach}/>\r\n                {progress?<CircularProgress/>:<div/>}\r\n                {media?\r\n                <IconButton onClick = {handleAttachRemove}>\r\n                    <Delete/>\r\n                </IconButton>\r\n                :<div/>}\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ChatWindow(props){\r\n    const {roomId,isCandidate,onClose} = props;\r\n    var [chats,setChats] = React.useState([]);\r\n\r\n    useEffect(()=>{\r\n        getChats(roomId).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            console.log(\"Chat Response\",res);\r\n            if(res.success){\r\n                chats = res.chats;\r\n                setChats(chats);\r\n            }\r\n        });\r\n\r\n        socket.on(\"chat_send/\"+roomId,(data)=>{\r\n            var newChats = chats.concat(data);\r\n            chats = newChats;\r\n            setChats(newChats);\r\n        });\r\n    },[1])\r\n\r\n    return(\r\n        <div style={{display:\"flex\",flexDirection:\"column\",margin:5, padding:10, borderStyle:\"solid\", borderRadius:10}}>\r\n            <div style={{display:\"flex\"}}>\r\n                <div style={{display:\"flex\",flexGrow:1}}>\r\n                    <Typography variant=\"h4\">\r\n                        Chat Window\r\n                    </Typography>\r\n                </div>\r\n\r\n                <IconButton onClick={()=>onClose()}>\r\n                    <Close/>\r\n                </IconButton>\r\n            </div>\r\n            <div style={{display:\"flex\",flexDirection:\"column\",flexGrow:1,height:0, overflowY:\"scroll\", scrollSnapAlign:\"y proximity\"}}> \r\n                {chats.map((item,index)=>(\r\n                    <Chat chat = {item}/>\r\n                    \r\n                ))}\r\n            </div>\r\n            <div style={{display:\"flex\"}}>\r\n                <SendMessage roomId ={roomId} isCandidate = {isCandidate}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChatWindow);","import {chatEndPoints} from '../endpoints'\r\n\r\nexport const getChats = (roomId)=>{\r\n    const requestOptions = {\r\n        method:\"GET\",\r\n        headers:{ \"room\":roomId ,'Content-Type': 'application/json',}\r\n    }\r\n\r\n    return fetch(chatEndPoints.getChats,requestOptions);\r\n}","import React, { useEffect } from 'react'\r\nimport { Button, CircularProgress, Dialog, DialogActions, DialogContent, Snackbar, TextField,DialogTitle, IconButton, Typography, Card, Box } from '@material-ui/core'\r\n\r\nimport {getRoom} from '../../utils/api/controllers/roomCtrl'\r\nimport {getProfileById} from '../../utils/api/controllers/interviewerCtrl'\r\nimport { socket } from '../../utils/websocket';\r\nimport {UserData,CandidateData} from '../../utils/localStorage';\r\nimport { Close } from '@material-ui/icons';\r\n\r\nimport Online from '../../res/icons/live.png'\r\nimport Offline from '../../res/icons/offline.png'\r\n\r\nfunction InterviewViewHolder(props){\r\n    const {roomId,interviewerId,isLive}  = props;\r\n    const [interviewer,setInterviewer] = React.useState({});\r\n    const [live,setLive] = React.useState(false);\r\n\r\n    var isSelf = false;\r\n    if(CandidateData.candidateExists()){\r\n        isSelf = false;\r\n    }else if(interviewerId == UserData.getProfileData()._id){\r\n        isSelf = true;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getProfileById(interviewerId).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                console.log(\"Interviewer\",res);\r\n                setInterviewer(res.interviewer);\r\n            }\r\n        })\r\n\r\n        socket.on(\"interviewer_status/\"+roomId,(data)=>{\r\n            if(data.interviewer == interviewerId){\r\n                if(data.joined){\r\n                    setLive(true);\r\n                }else{\r\n                    setLive(false);\r\n                }\r\n                \r\n            }\r\n        })\r\n    },[1])\r\n\r\n    return(\r\n        <Box borderColor=\"primary\">\r\n            {!isSelf?\r\n                <Card style={{margin:10}} variant=\"outlined\">\r\n                {live?\r\n                <div>\r\n                    <img src = {Online} style={{height:20,width:20}}/> Online\r\n                </div>\r\n                :\r\n                <div>\r\n                    <img src = {Offline} style={{height:20,width:20}}/> Offline\r\n                </div>}\r\n                <Typography style={{margin:10}}>\r\n                    {interviewer.name}\r\n                </Typography>\r\n\r\n                <Typography style={{margin:10}}>\r\n                    {interviewer.email}\r\n                </Typography>\r\n                 \r\n                </Card>\r\n\r\n                :\r\n                <div/>\r\n            }\r\n            \r\n        </Box>\r\n    )\r\n\r\n}\r\n\r\nfunction RequestDialog(props){ \r\n    const {roomId,open,onClose,onAccept} = props;\r\n    const [email,setEmail] = React.useState(\"\");\r\n    const [waiting,setWaiting] = React.useState(false);\r\n    const [showSnackBar,setShowSnackBar] = React.useState(false);\r\n    const [snackBarMessage,setSnackBarMessage] = React.useState(\"\");\r\n\r\n    const handleRequest = ()=>{\r\n        socket.emit(\"request_interviewer\",{room:roomId,email:email});\r\n        setWaiting(true);\r\n        socket.on(\"interviewer_wait_response/\"+roomId,(data)=>{\r\n            if(data.res){\r\n                onAccept(data.interviewer._id);\r\n            }else{\r\n                setSnackBarMessage(data.msg);\r\n                setShowSnackBar(true);\r\n            }\r\n\r\n            onClose();\r\n            setWaiting(false);\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Dialog open = {open}>\r\n                <DialogTitle>Enter the emailId of interviewer</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField label=\"Email Id\" onChange={(event)=>{setEmail(event.target.value)}}/>\r\n                    {waiting?<div>Waiting <br/><CircularProgress/></div>:<div/>}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleRequest}>\r\n                        Request\r\n                    </Button>\r\n                    <Button onClick ={()=>{onClose()}}>\r\n                        Cancle\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar open = {showSnackBar} onClose= {()=>setShowSnackBar(false)} message={snackBarMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InterviewerWindow(props){\r\n    const {roomId,isCandidate,onClose} = props;\r\n    var [interviewers,setIntervieweres] = React.useState([]);\r\n    var [room,setRoom] = React.useState({});\r\n    const [requestDialogOpen,setRequestDialogOpen] = React.useState(false);\r\n\r\n    useEffect(()=>{\r\n        getRoom(roomId).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                setRoom(res.room);\r\n                setIntervieweres(res.room.interviewers);\r\n\r\n                console.log(\"Room\",res.room);\r\n            }else{\r\n\r\n            }\r\n        })\r\n    },[1])\r\n\r\n    const handleRequestDialog = ()=>{\r\n        setRequestDialogOpen(true);\r\n    }\r\n\r\n    return(\r\n        \r\n        <div style={{display:\"flex\",flexDirection:\"column\",flexGrow:1,borderStyle:\"solid\" ,borderRadius:10,padding:10}}>\r\n            <div style={{display:\"flex\"}}>\r\n\r\n                <Typography style={{display:\"flex\", flexGrow:1}} variant=\"h4\">\r\n                    Interviewer Window\r\n                </Typography>\r\n                \r\n            \r\n                <IconButton onClick={()=>{onClose()}}>\r\n                    <Close/>\r\n                </IconButton>\r\n            </div>\r\n            <div>\r\n                {isCandidate?<div/>: <Button color=\"primary\" variant=\"contained\" onClick = {handleRequestDialog}>\r\n                    Add Interviewer\r\n                </Button>}\r\n                \r\n\r\n                <div style={{display:\"flex\"}}>\r\n                    {interviewers.map((item,index)=>(\r\n                        <div>\r\n                            <InterviewViewHolder roomId = {roomId} interviewerId={item}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <RequestDialog roomId = {roomId} open={requestDialogOpen} onClose={()=>{setRequestDialogOpen(false)}} onAccept = {(interviewer)=>{setIntervieweres([...interviewers,interviewer])}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterviewerWindow;","import React, { useEffect } from 'react'\r\nimport {withRouter,useParams} from 'react-router-dom'\r\n\r\nimport CodeEditor from '../../organism/CodeEditor'\r\nimport LoadScreen from '../../atoms/LoadScreen'\r\nimport ChatWindow from '../../organism/ChatWindow'\r\nimport InterviewerWindow from '../../organism/InterviewerWindow'\r\n\r\nimport {checkInterviewer,removeInterviewer} from '../../../utils/api/controllers/roomCtrl'\r\nimport {socket} from '../../../utils/websocket'\r\nimport { Button, Dialog, DialogActions, DialogTitle, IconButton, Typography, Card} from '@material-ui/core'\r\nimport {getCandidateProfile} from '../../../utils/api/controllers/candidateCtrl'\r\n\r\nimport {Chat, ExitToApp, People,FileCopy} from '@material-ui/icons'\r\n\r\nimport {CandidateData} from '../../../utils/localStorage'\r\n\r\n\r\nfunction ActionBar(props){\r\n    const {onButtonClick}  = props;\r\n    \r\n    return(\r\n        <Card>\r\n            <IconButton onClick={()=>{onButtonClick(0)}}>\r\n                <Chat/>\r\n            </IconButton>\r\n            <IconButton onClick = {()=>onButtonClick(1)}>\r\n                <People/>\r\n            </IconButton>\r\n            <IconButton onClick = {()=>onButtonClick(2)}>\r\n                <ExitToApp/>\r\n            </IconButton>\r\n            <Button onClick = {()=>onButtonClick(3)}>\r\n                Leave Room\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nfunction RoomCandidate(props){\r\n    const {id} = useParams();\r\n    const roomId = id;\r\n\r\n    const {history} = props;\r\n\r\n    const [chatWindow,setChatWindow] = React.useState(false);\r\n    const [peopleWindow,setPeopleWindow] = React.useState(false);\r\n    \r\n    const handleLeaveRoom = ()=>{\r\n        CandidateData.clearCandidate();\r\n        props.history.push('../../');\r\n\r\n        socket.emit(\"candidate_status\",{room:id,joined:false})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        socket.on(\"interviewer_disconnect/\"+roomId,(data)=>{\r\n            history.push(\"../../\");\r\n        })\r\n\r\n        //Pinging server\r\n        const interval = setInterval(()=>{socket.emit(\"candidate_status\",{room:id,joined:true})},1000);\r\n        \r\n\r\n        //Adding event if the tab gets closed\r\n        window.addEventListener(\"beforeunload\", (ev) => {\r\n            socket.emit(\"candidate_status\",{room:id,joined:false})\r\n            clearInterval(interval);\r\n        });\r\n\r\n        return ()=>{\r\n            clearInterval(interval)\r\n            socket.emit(\"candidate_status\",{room:id,joined:false})\r\n        }\r\n    })\r\n\r\n\r\n    return(\r\n        <div style={{display:\"flex\",flexGrow:1,flexDirection:\"column\"}} className=\"root\">\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <div style={{display:\"flex\",flexGrow:1, flexWrap:\"wrap\"}}>\r\n                    <Typography variant=\"h4\">\r\n                        Candidate Room\r\n                    </Typography>\r\n\r\n                    <div style={{display:\"flex\", justifyContent:\"center\",flexGrow:1}}>\r\n                        <div style={{fontSize:20, textAlign:\"center\" }}>\r\n                            Room Id -  \r\n                        </div>\r\n                        <div style={{fontSize:20, textAlign:\"center\" }}>\r\n                            {roomId}\r\n                        </div>\r\n\r\n                        <Button onClick={()=>{\r\n                            navigator.clipboard.writeText(roomId);}}>\r\n                            <FileCopy/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{margin:10,}}>\r\n                    <ActionBar onButtonClick={\r\n                        (pos)=>{\r\n                            if(pos == 0){\r\n                                setChatWindow(true);\r\n                            }else if(pos == 1){\r\n                                setPeopleWindow(true);\r\n                            }else if(pos == 2){\r\n                                socket.emit(\"candidate_status\",{room:id,joined:false})\r\n                                history.push('../../');\r\n                            }else if(pos == 3){\r\n                                handleLeaveRoom();\r\n                            }\r\n                        }\r\n                    }/>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display:\"flex\",flexGrow:1}}>\r\n                <div style={{display:\"flex\", flexGrow:1,flexDirection:\"column\"}}>\r\n                    \r\n                    <div style={{display:\"flex\",flexGrow:1,margin:20}}>\r\n                        <CodeEditor roomId = {roomId}/>\r\n\r\n                    </div>\r\n                    \r\n                    {peopleWindow?\r\n                    <div style={{display:\"flex\", padding:5,margin:5}}>\r\n                        <InterviewerWindow roomId = {roomId} isCandidate = {true} onClose = {()=>{setPeopleWindow(false)}}/>\r\n                    </div>\r\n                    :<div/>}\r\n                    \r\n                    \r\n                </div>\r\n                <div style={{display:\"flex\"}}>\r\n                    {chatWindow?\r\n                        <ChatWindow roomId = {roomId} isCandidate = {true} onClose={()=>{setChatWindow(false)}}/>:\r\n                        <div/>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RoomCandidate);","import React, { useEffect } from 'react'\r\nimport {withRouter,useParams} from 'react-router-dom'\r\nimport {FileCopy} from '@material-ui/icons'\r\n\r\nimport CodeEditor from '../../organism/CodeEditor'\r\nimport LoadScreen from '../../atoms/LoadScreen'\r\nimport ChatWindow from '../../organism/ChatWindow'\r\nimport InterviewerWindow from '../../organism/InterviewerWindow'\r\n\r\nimport Online from '../../../res/icons/live.png';\r\nimport Offline from '../../../res/icons/offline.png'\r\n\r\nimport {checkInterviewer,removeInterviewer} from '../../../utils/api/controllers/roomCtrl'\r\nimport {socket} from '../../../utils/websocket'\r\nimport { Button, Dialog, DialogActions, DialogTitle, IconButton, Typography, Card, Menu} from '@material-ui/core'\r\nimport {getCandidateProfile} from '../../../utils/api/controllers/candidateCtrl'\r\nimport {UserData} from '../../../utils/localStorage'\r\n\r\nimport {Chat, ExitToApp, People, Person} from '@material-ui/icons'\r\n\r\n//CSS Styles\r\nimport '../style.css'\r\n\r\nfunction CandidateBar(props){\r\n    const {isJoined} = props;\r\n\r\n    return(\r\n        <div>\r\n            {isJoined?\r\n            <div style={{display:\"flex\"}}>\r\n                <img src ={Online} style={{height:20,width:20}}/>\r\n                <Typography>\r\n                    Candidate is Online\r\n                </Typography>\r\n\r\n            </div>\r\n            :\r\n            <div style={{display:\"flex\"}}>\r\n                <img src ={Offline} style={{height:20,width:20}}/>\r\n                <Typography>\r\n                    Candidate is Offline\r\n                </Typography>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ActionBar(props){\r\n    const {onButtonClick,candidateId,joined}  = props;\r\n    const [anchor,setAnchor] = React.useState(null);\r\n    const [candidateDetails,setDetails] = React.useState([]);\r\n\r\n    const loadDetails = ()=>{\r\n        getCandidateProfile(candidateId).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                var details = [];\r\n\r\n                for(const [key,value] of Object.entries(res.candidate.details)){\r\n                    details.push([key,value]);\r\n                }\r\n                setDetails(details);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <Card> \r\n            {joined?\r\n                <IconButton onClick = {(event)=>{setAnchor(event.currentTarget); loadDetails()}}>\r\n                    <Person/>\r\n                </IconButton>\r\n                :\r\n                <div/>\r\n            }\r\n            \r\n            <IconButton onClick={()=>{onButtonClick(0)}}>\r\n                <Chat/>\r\n            </IconButton>\r\n            <IconButton onClick = {()=>onButtonClick(1)}>\r\n                <People/>\r\n            </IconButton>\r\n            <IconButton onClick = {()=>onButtonClick(2)}>\r\n                <ExitToApp/>\r\n            </IconButton>\r\n            <Button onClick = {()=>onButtonClick(3)}>\r\n                Leave Room\r\n            </Button>\r\n\r\n            <Menu open ={Boolean(anchor)} anchorEl={anchor} onClose={()=>{setAnchor(null)}}>\r\n                <div style={{margin:20}}>\r\n                    {candidateDetails.map((item,index)=>(\r\n                        <div>\r\n                            {item[0]}  =  {item[1]}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Menu>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst InterviewScreen = withRouter(function(props){\r\n    const {roomId,candidateJoined,history,candidateId} = props;\r\n\r\n    const [chatWindow,setChatWindow] = React.useState(false);\r\n    const [peopleWindow,setPeopleWindow] = React.useState(false);\r\n    \r\n    const handleLeaveRoom = ()=>{\r\n        removeInterviewer(roomId).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.success){\r\n                history.push('../../');\r\n            }\r\n        })\r\n\r\n        socket.emit(\"interviewer_status\",({room:roomId,joined:false,interviewer:UserData.getProfileData()._id}))\r\n    }\r\n\r\n\r\n    return(\r\n        <div style={{display:\"flex\",flexGrow:1,flexDirection:\"column\"}} className=\"root\">\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <div style={{display:\"flex\",flexGrow:1, flexWrap:\"wrap\"}}>\r\n                    <Typography variant=\"h4\">\r\n                        Interviewer Room\r\n                    </Typography>\r\n\r\n                    <div style={{display:\"flex\", justifyContent:\"center\",flexGrow:1}}>\r\n                        <div style={{fontSize:20, textAlign:\"center\" }}>\r\n                            Room Id -  \r\n                        </div>\r\n                        <div style={{fontSize:20, textAlign:\"center\" }}>\r\n                            {roomId}\r\n                        </div>\r\n\r\n                        <Button onClick={()=>{\r\n                            navigator.clipboard.writeText(roomId);}}>\r\n                            <FileCopy/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={{display:\"flex\",margin:10}}>\r\n                    <CandidateBar isJoined = {candidateJoined}/>\r\n                </div>\r\n                \r\n\r\n                <div style={{margin:10,}}>\r\n                    <ActionBar onButtonClick={\r\n                        (pos)=>{\r\n                            if(pos == 0){\r\n                                setChatWindow(true);\r\n                            }else if(pos == 1){\r\n                                setPeopleWindow(true);\r\n                            }else if(pos == 2){\r\n                                socket.emit(\"interviewer_status\",({room:roomId,joined:false,interviewer:UserData.getProfileData()._id}))\r\n                                history.push('../../');\r\n                            }else if(pos == 3){\r\n                                handleLeaveRoom();\r\n                            }\r\n                        }\r\n                    }\r\n                    joined = {candidateJoined}\r\n                    candidateId= {candidateId}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display:\"flex\",flexGrow:1}}>\r\n                <div style={{display:\"flex\", flexGrow:1,flexDirection:\"column\"}}>\r\n                    \r\n                    <div style={{display:\"flex\",flexGrow:1,margin:10}}>\r\n                        <CodeEditor roomId = {roomId}/>\r\n\r\n                    </div>\r\n                    \r\n                    {peopleWindow?\r\n                    <div style={{display:\"flex\",padding:5,margin:5}}>\r\n                        <InterviewerWindow roomId = {roomId} isCandidate = {false} onClose = {()=>{setPeopleWindow(false)}}/>\r\n                    </div>\r\n                    :<div style={{display:\"flex\"}}/>}\r\n                    \r\n                    \r\n                </div>\r\n                <div style={{display:\"flex\"}}>\r\n                    {chatWindow?\r\n                        <ChatWindow roomId = {roomId} isCandidate = {false} onClose={()=>{setChatWindow(false)}}/>:\r\n                        <div/>\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n})\r\n\r\nfunction JoinCandidateDialog(props){\r\n    const {onDecline,onAccept,candidate,open} = props;\r\n    const [candidateInfo,setCandidateInfo] = React.useState({});\r\n\r\n    useEffect(()=>{\r\n        getCandidateProfile(candidate).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            if(res.sucess){\r\n                setCandidateInfo(res.candidate);\r\n            }\r\n        })\r\n    },[1])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open}>\r\n            <DialogTitle>A candidate is requesting to join room (Candidate id = {candidate})</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={onAccept}>\r\n                        Accept\r\n                    </Button>\r\n\r\n                    <Button onClick={onDecline}>\r\n                        Decline\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RoomInterviewer(props){\r\n\r\n    const {id} = useParams();\r\n    const [checkStatus, setCheckStatus] = React.useState(false);\r\n    const [requestedCandidate,setRequestedCandidate] = React.useState(\"\");\r\n    const [showJoinDialog,setShowJoinDialog] = React.useState(false);\r\n    const [candidateJoined, setCandidateJoined] = React.useState(false);\r\n\r\n\r\n    const handleCandidateAccept = ()=>{\r\n        socket.emit(\"accept\",({room:id, candidate:requestedCandidate, res:true}));\r\n        setShowJoinDialog(false);\r\n        setCandidateJoined(true);\r\n    }\r\n\r\n    const handleCandidateDecline = ()=>{\r\n        socket.emit(\"accept\",({room:id, candidate:requestedCandidate, res:false}));\r\n        setShowJoinDialog(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        checkInterviewer(id).then((res)=>(res.json()))\r\n        .then((res)=>{\r\n            console.log(\"Response\",res);\r\n            if(res.success){\r\n                if(res.exists){\r\n                    setCheckStatus(true);\r\n                }else{\r\n                    props.history.push('../../');\r\n                }\r\n            }else{\r\n                props.history.push('../../');\r\n            }\r\n        })\r\n\r\n        socket.on(\"wait/\"+id,(data)=>{\r\n            const {room ,candidate,waiting} = data;\r\n            console.log(\"Received Request\",data);\r\n            if(waiting){\r\n                setShowJoinDialog(true);\r\n            }else{\r\n                setShowJoinDialog(false);\r\n            }\r\n            \r\n            setRequestedCandidate(candidate);\r\n        })\r\n\r\n        socket.on(\"candidate_status/\"+id,(data)=>{\r\n            if(data.joined){\r\n                setCandidateJoined(true);\r\n            }else{\r\n                setCandidateJoined(false);\r\n            }\r\n        })\r\n\r\n        //Pinging server\r\n        const interval = setInterval(()=>{socket.emit(\"interviewer_status\",({room:id,joined:true,interviewer:UserData.getProfileData()._id}))},1000);\r\n        \r\n        //Adding event if the tab gets closed\r\n        window.addEventListener(\"beforeunload\", (ev) => {\r\n            socket.emit(\"interviewer_status\",({room:id,joined:false,interviewer:UserData.getProfileData()._id}))\r\n            clearInterval(interval);\r\n        });\r\n\r\n        return ()=>{\r\n            socket.emit(\"interviewer_status\",({room:id,joined:false,interviewer:UserData.getProfileData()._id}))\r\n            clearInterval(interval);\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"root\" >\r\n            {checkStatus?<InterviewScreen candidateJoined = {candidateJoined} candidateId = {requestedCandidate} roomId = {id}/>:<LoadScreen title=\"Checking the interviewer\"/>}\r\n            \r\n            <JoinCandidateDialog open = {showJoinDialog} onAccept={handleCandidateAccept} onDecline = {handleCandidateDecline} candidate = {requestedCandidate}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RoomInterviewer);","import React from 'react'\r\nimport {HashRouter,Switch, Route,withRouter,Redirect} from 'react-router-dom'\r\nimport {useEffect} from 'react'\r\nimport {firebaseConfig} from './config'\r\nimport firebase from 'firebase'\r\n\r\nimport LoginScreen from './components/screens/LoginScreen'\r\nimport RegistrationScreen from './components/screens/RegisterScreen'\r\nimport HomeScreen from './components/screens/interviewer/HomeScreen'\r\nimport JoinRoomScreen from './components/screens/candidate/JoinRoomScreen'\r\n\r\nimport RoomCandidate from './components/screens/candidate/RoomCandidate';\r\nimport RoomInterviewer from './components/screens/interviewer/RoomInterviewer';\r\n\r\nimport {UserData} from './utils/localStorage'\r\nimport RegisterScreen from './components/screens/RegisterScreen'\r\n\r\nimport {socket} from './utils/websocket'\r\n\r\nfunction LoadingScreen(props){\r\n\r\n    return(\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Main(props){\r\n\r\n    const [scriptLoading, setScriptLoading] = React.useState(0);\r\n    const scriptCount = \r\n    useEffect(()=>{      \r\n\r\n    },[1])\r\n\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path=\"/register\"><RegistrationScreen/></Route>\r\n                    <Route path = \"/interviewer/room/:id\"><RoomInterviewer/></Route>\r\n                    <Route path = \"/candidate/room/:id\"><RoomCandidate/></Route>\r\n                    <Route path = \"/interviewer\"><HomeScreen/></Route>\r\n                    <Route path=\"/joinRoom\"><JoinRoomScreen/></Route>\r\n                    <Route path=\"/\"><LoginScreen/></Route>\r\n                </Switch>                \r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport {appTheme} from './app/res/themes'\n\nimport Main from './app/Main';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={appTheme}>\n          <Main/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/live.f8e19943.png\";","module.exports = __webpack_public_path__ + \"static/media/offline.e5e001a4.png\";"],"sourceRoot":""}